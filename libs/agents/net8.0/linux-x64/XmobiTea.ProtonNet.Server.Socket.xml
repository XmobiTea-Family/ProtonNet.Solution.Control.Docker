<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XmobiTea.ProtonNet.Server.Socket</name>
    </assembly>
    <members>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext">
            <summary>
            Provides an interface for the socket server context, extending <see cref="T:XmobiTea.ProtonNet.Server.Context.IServerContext"/>.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext.GetControllerService">
            <summary>
            Gets the socket controller service used by the server.
            </summary>
            <returns>The <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext">
            <summary>
            Represents the socket server context, implementing <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext"/>.
            This class is sealed to prevent inheritance.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext"/> class from being created.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.GetControllerService">
            <summary>
            Gets the socket controller service used by the server.
            </summary>
            <returns>The <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.SetControllerService(XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService)">
            <summary>
            Sets the socket controller service used by the server.
            </summary>
            <param name="controllerService">The <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService"/> instance to set.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder"/> class to build a <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext"/>.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder">
            <summary>
            Provides a builder pattern for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.SessionService">
            <summary>
            Gets or sets the session service used by the server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.UserPeerSessionService">
            <summary>
            Gets or sets the user peer session service used by the server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.InitRequestProviderService">
            <summary>
            Gets or sets the initialization request provider service used by the server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.ByteArrayManagerService">
            <summary>
            Gets or sets the byte array manager service used by the server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.SetSessionService(XmobiTea.ProtonNet.Server.Services.ISessionService)">
            <summary>
            Sets the session service to be used by the server.
            </summary>
            <param name="sessionService">The session service to set.</param>
            <returns>The current <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.SetUserPeerSessionService(XmobiTea.ProtonNet.Server.Services.IUserPeerSessionService)">
            <summary>
            Sets the user peer session service to be used by the server.
            </summary>
            <param name="userPeerSessionService">The user peer session service to set.</param>
            <returns>The current <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.SetInitRequestProviderService(XmobiTea.ProtonNet.Server.Services.IInitRequestProviderService)">
            <summary>
            Sets the initialization request provider service to be used by the server.
            </summary>
            <param name="initRequestProviderService">The initialization request provider service to set.</param>
            <returns>The current <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.SetByteArrayManagerService(XmobiTea.ProtonNet.Server.Services.IByteArrayManagerService)">
            <summary>
            Sets the byte array manager service to be used by the server.
            </summary>
            <param name="byteArrayManagerService">The byte array manager service to set.</param>
            <returns>The current <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext.Builder.Build">
            <summary>
            Builds and returns a new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext"/> using the provided services.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.SocketServerContext"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Controllers.ProtonSocketController">
            <summary>
            Represents a specialized socket controller for handling operations in the Proton socket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.ProtonSocketController.OnConnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Called when a session is connected. Maps the session to the session service if the session ID is available.
            </summary>
            <param name="session">The session that was connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.ProtonSocketController.OnReceived(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from a session. Deserializes and processes the operation models within the received data.
            </summary>
            <param name="session">The session that received the data.</param>
            <param name="buffer">The buffer containing the received data.</param>
            <param name="position">The position in the buffer where the received data starts.</param>
            <param name="length">The length of the received data in the buffer.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.ProtonSocketController.OnError(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Net.Sockets.SocketError)">
            <summary>
            Called when an error occurs in a session. Currently, no specific error handling is implemented.
            </summary>
            <param name="session">The session where the error occurred.</param>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.ProtonSocketController.OnDisconnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Called when a session is disconnected. Removes the session and cleans up related resources.
            </summary>
            <param name="session">The session that was disconnected.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController">
            <summary>
            Represents an abstract base class for socket controllers that handle various events
            such as connection, data reception, errors, and disconnections.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController.logger">
            <summary>
            Gets the logger instance used for logging information, warnings, and errors.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController.OnConnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Called when a session is connected. Can be overridden by derived classes to handle connection logic.
            </summary>
            <param name="session">The session that was connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController.OnReceived(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from a session. Can be overridden by derived classes to handle data reception logic.
            </summary>
            <param name="session">The session that received the data.</param>
            <param name="buffer">The buffer containing the received data.</param>
            <param name="position">The position in the buffer where the received data starts.</param>
            <param name="length">The length of the received data in the buffer.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController.OnError(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Net.Sockets.SocketError)">
            <summary>
            Called when an error occurs in a session. Can be overridden by derived classes to handle error logic.
            </summary>
            <param name="session">The session where the error occurred.</param>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController.OnDisconnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Called when a session is disconnected. Can be overridden by derived classes to handle disconnection logic.
            </summary>
            <param name="session">The session that was disconnected.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry">
            <summary>
            Represents a debug implementation of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServerEntry"/> for creating and configuring 
            a socket server specifically for debugging purposes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.StartupSettings">
            <summary>
            Gets the startup settings used for configuring the debug socket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.#ctor(XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the debug socket server entry.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.GetServer">
            <summary>
            Gets an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer"/> configured with the specified startup settings 
            for debugging purposes.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder.StartupSettings">
            <summary>
            Gets or sets the startup settings used to configure the debug socket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder.SetStartupSettings(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Sets the startup settings used to configure the debug socket server.
            </summary>
            <param name="startupSettings">The startup settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.DebugSocketServerEntry"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Exceptions.MissingSocketControllerException">
            <summary>
            Represents an exception that is thrown when a required socket controller is missing.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Exceptions.MissingSocketControllerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Exceptions.MissingSocketControllerException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.ISocketOperationModelHandler">
            <summary>
            Defines the interface for handling operations on socket sessions.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.ISocketOperationModelHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.IOperationModel,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles an operation model for a given session.
            </summary>
            <param name="session">The session that received the operation.</param>
            <param name="operationModel">The operation model containing the operation data.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use for this operation.</param>
            <param name="cryptoProviderType">The crypto provider type, if any, to use for this operation.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.IOperationModelHandler`1">
            <summary>
            Defines a generic interface for handling operations on socket sessions with a specific operation model type.
            </summary>
            <typeparam name="TOperationModel">The type of the operation model to handle.</typeparam>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.IOperationModelHandler`1.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,`0,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles an operation model for a given session.
            </summary>
            <param name="session">The session that received the operation.</param>
            <param name="operationModel">The operation model containing the operation data.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use for this operation.</param>
            <param name="cryptoProviderType">The crypto provider type, if any, to use for this operation.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.AbstractOperationModelHandler`1">
            <summary>
            Provides an abstract base class for handling operations on socket sessions with a specific operation model type.
            </summary>
            <typeparam name="TOperationModel">The type of the operation model to handle.</typeparam>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Handlers.AbstractOperationModelHandler`1.logger">
            <summary>
            Gets the logger instance for logging information, warnings, and errors.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.AbstractOperationModelHandler`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Handlers.AbstractOperationModelHandler`1"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.AbstractOperationModelHandler`1.XmobiTea#ProtonNet#Server#Socket#Handlers#ISocketOperationModelHandler#Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.IOperationModel,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles an operation model for a given session, casting the operation model to the specific type.
            </summary>
            <param name="session">The session that received the operation.</param>
            <param name="operationModel">The operation model containing the operation data.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use for this operation.</param>
            <param name="cryptoProviderType">The crypto provider type, if any, to use for this operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.AbstractOperationModelHandler`1.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,`0,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles an operation model for a given session. This method must be implemented by derived classes.
            </summary>
            <param name="session">The session that received the operation.</param>
            <param name="operationModel">The operation model containing the operation data.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use for this operation.</param>
            <param name="cryptoProviderType">The crypto provider type, if any, to use for this operation.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationRequestHandler">
            <summary>
            Handles the OperationRequest by processing it and sending a response back to the client.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationRequestHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationRequest,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles the OperationRequest, validates the session, and processes the request.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationResponseHandler">
            <summary>
            Handles the OperationResponse by logging a warning since only the client should handle it.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationResponseHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationResponse,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Logs a warning that OperationResponse should only be handled by the client.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationEventHandler">
            <summary>
            Handles the OperationEvent by processing it and passing it to the event service.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationEventHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles the OperationEvent, validates the session, and processes the event.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationPingHandler">
            <summary>
            Handles the OperationPing by responding with an OperationPong.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationPingHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationPing,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles the OperationPing by sending an OperationPong back to the client.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationPongHandler">
            <summary>
            Handles the OperationPong, but since it's only for clients, it does nothing on the server side.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationPongHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationPong,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Does nothing since OperationPong is only handled by the client.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler">
            <summary>
            Handles the OperationHandshake by verifying and establishing a session, 
            and mapping the session to a user peer.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.SetMaxUdpSessionRequestPerUser(System.Int32)">
            <summary>
            Sets the maximum number of UDP session requests per user.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.SetMaxTcpSessionRequestPerUser(System.Int32)">
            <summary>
            Sets the maximum number of TCP session requests per user.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.SetMaxWsSessionRequestPerUser(System.Int32)">
            <summary>
            Sets the maximum number of WebSocket session requests per user.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationHandshake,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles the OperationHandshake by establishing a secure session and mapping it to a user peer.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.CheckAndDisconnectMaxSession(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.String,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType)">
            <summary>
            Checks if the maximum session limit per user is reached and disconnects the oldest session if necessary.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.GetSessions(System.String,XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol)">
            <summary>
            Retrieves the sessions associated with the specified session ID and transport protocol.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.GetUserPeer(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.String)">
            <summary>
            Retrieves the user peer associated with the session, using an authentication token if provided.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeHandler.CreateDefaultUserPeer(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Creates a default user peer when no authentication token is provided.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeAckHandler">
            <summary>
            Handles the OperationHandshakeAck by logging a warning since only the client should handle it.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationHandshakeAckHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationHandshakeAck,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Logs a warning that OperationHandshakeAck should only be handled by the client.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationDisconnectHandler">
            <summary>
            Handles the OperationDisconnect by logging a warning since only the client should handle it.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Handlers.OperationDisconnectHandler.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationDisconnect,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Logs a warning that OperationDisconnect should only be handled by the client.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer">
            <summary>
            Defines the interface for a socket server, including methods to start and stop the server,
            and to retrieve the server context and network statistics.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ISocketServer.Start">
            <summary>
            Starts the socket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ISocketServer.Stop">
            <summary>
            Stops the socket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ISocketServer.GetContext">
            <summary>
            Gets the context of the socket server, which includes various services and configurations.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext"/> representing the server's context.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ISocketServer.GetNetworkStatistics">
            <summary>
            Gets the network statistics for the socket server, providing details about network performance and usage.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.IServerNetworkStatistics"/> representing the server's network statistics.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.ISocketServerEntry">
            <summary>
            Represents an entry point for obtaining an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer"/>.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ISocketServerEntry.GetServer">
            <summary>
            Gets an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer"/> configured with the specified startup settings.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry">
            <summary>
            Provides an implementation of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServerEntry"/> for creating and configuring socket servers.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.StartupSettings">
            <summary>
            Gets the startup settings used for configuring the socket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.#ctor(XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the socket server entry.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.GetServer">
            <summary>
            Gets an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer"/> configured with the specified startup settings.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ISocketServer"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder.StartupSettings">
            <summary>
            Gets or sets the startup settings used to configure the socket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder.SetStartupSettings(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Sets the startup settings used to configure the socket server.
            </summary>
            <param name="startupSettings">The startup settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServerEntry"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime">
            <summary>
            Defines the interface for tracking and managing time-related information for a socket session,
            such as connection time, handshake time, and the last received data time.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime.GetTicksConnected">
            <summary>
            Gets the timestamp (in ticks) when the session was connected.
            </summary>
            <returns>The timestamp of when the session was connected.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime.GetTicksHandshaked">
            <summary>
            Gets the timestamp (in ticks) when the session completed the handshake.
            </summary>
            <returns>The timestamp of when the session completed the handshake.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime.SetTicksHandshaked(System.Int64)">
            <summary>
            Sets the timestamp (in ticks) when the session completed the handshake.
            </summary>
            <param name="ticks">The timestamp of the handshake completion.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime.GetTicksLastReceived">
            <summary>
            Gets the timestamp (in ticks) of the last received data for the session.
            </summary>
            <returns>The timestamp of the last received data.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime.SetTicksLastReceived(System.Int64)">
            <summary>
            Sets the timestamp (in ticks) of the last received data for the session.
            </summary>
            <param name="ticks">The timestamp of the last received data.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime">
            <summary>
            Implements the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime"/> interface to track and manage 
            time-related information for a socket session, such as connection time, handshake time, 
            and the last received data time.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.ticksConnected">
            <summary>
            Gets the timestamp (in ticks) when the session was connected.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.ticksHandshaked">
            <summary>
            Gets or sets the timestamp (in ticks) when the session completed the handshake.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.ticksLastReceived">
            <summary>
            Gets or sets the timestamp (in ticks) of the last received data for the session.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime"/> class and sets the connection time to the current time.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.GetTicksConnected">
            <summary>
            Gets the timestamp (in ticks) when the session was connected.
            </summary>
            <returns>The timestamp of when the session was connected.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.GetTicksHandshaked">
            <summary>
            Gets the timestamp (in ticks) when the session completed the handshake.
            </summary>
            <returns>The timestamp of when the session completed the handshake.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.SetTicksHandshaked(System.Int64)">
            <summary>
            Sets the timestamp (in ticks) when the session completed the handshake.
            </summary>
            <param name="ticks">The timestamp of the handshake completion.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.GetTicksLastReceived">
            <summary>
            Gets the timestamp (in ticks) of the last received data for the session.
            </summary>
            <returns>The timestamp of the last received data.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Models.SocketSessionTime.SetTicksLastReceived(System.Int64)">
            <summary>
            Sets the timestamp (in ticks) of the last received data for the session.
            </summary>
            <param name="ticks">The timestamp of the last received data.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Server.IServer">
            <summary>
            Defines the interface for a server, providing methods to manage server operations
            such as starting, stopping, and restarting the server, as well as retrieving network statistics.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.IServer.GetAddress">
            <summary>
            Gets the IP address the server is bound to.
            </summary>
            <returns>The server's IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.IServer.GetPort">
            <summary>
            Gets the port the server is listening on.
            </summary>
            <returns>The server's port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.IServer.Start">
            <summary>
            Starts the server.
            </summary>
            <returns>A boolean value indicating whether the server started successfully.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.IServer.Stop">
            <summary>
            Stops the server.
            </summary>
            <returns>A boolean value indicating whether the server stopped successfully.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.IServer.Restart">
            <summary>
            Restarts the server.
            </summary>
            <returns>A boolean value indicating whether the server restarted successfully.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.IServer.GetNetworkStatistics">
            <summary>
            Retrieves the network statistics for the server.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.IServerNetworkStatistics"/> representing the server's network statistics.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer">
            <summary>
            Represents a secure TCP server (SSL/TLS) that integrates with the ProtonNet framework,
            allowing for secure TCP communication within the socket server context.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer.context">
            <summary>
            Gets the context of the socket server, which provides services and configuration for the server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions,XmobiTea.ProtonNetCommon.SslOptions,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer"/> class with the specified address, port, TCP options, SSL options, and context.
            </summary>
            <param name="address">The IP address the server will bind to.</param>
            <param name="port">The port the server will listen on.</param>
            <param name="options">The TCP server options for configuring the server's behavior.</param>
            <param name="sslOptions">The SSL options for secure communication.</param>
            <param name="context">The context that provides services and configuration for the server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer.GetAddress">
            <summary>
            Gets the address the server is bound to.
            </summary>
            <returns>The server's IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer.GetPort">
            <summary>
            Gets the port the server is listening on.
            </summary>
            <returns>The server's port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer.CreateSession">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession"/> to handle a secure TCP session.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer">
            <summary>
            Represents a TCP server that integrates with the ProtonNet framework,
            allowing for TCP communication within the socket server context.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer.context">
            <summary>
            Gets the context of the socket server, which provides services and configuration for the server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer"/> class with the specified address, port, and options.
            </summary>
            <param name="address">The IP address the server will bind to.</param>
            <param name="port">The port the server will listen on.</param>
            <param name="options">The TCP server options for configuring the server's behavior.</param>
            <param name="context">The context that provides services and configuration for the server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer.GetAddress">
            <summary>
            Gets the address the server is bound to.
            </summary>
            <returns>The server's IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer.GetPort">
            <summary>
            Gets the port the server is listening on.
            </summary>
            <returns>The server's port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer.CreateSession">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession"/> to handle a TCP session.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer">
            <summary>
            Represents a UDP server that integrates with the ProtonNet framework,
            allowing for UDP communication within the socket server context.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer.context">
            <summary>
            Gets the context of the socket server, which provides services and configuration for the server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.UdpServerOptions,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer"/> class with the specified address, port, and options.
            </summary>
            <param name="address">The IP address the server will bind to.</param>
            <param name="port">The port the server will listen on.</param>
            <param name="options">The UDP server options for configuring the server's behavior.</param>
            <param name="context">The context that provides services and configuration for the server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer.GetAddress">
            <summary>
            Gets the address the server is bound to.
            </summary>
            <returns>The server's IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer.GetPort">
            <summary>
            Gets the port the server is listening on.
            </summary>
            <returns>The server's port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer.CreateSession">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession"/> to handle a UDP session.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer">
            <summary>
            Represents a WebSocket (WS) server that integrates with the ProtonNet framework,
            allowing for WebSocket communication within the socket server context.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer.context">
            <summary>
            Gets the context of the socket server, which provides services and configuration for the server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer"/> class with the specified address, port, and options.
            </summary>
            <param name="address">The IP address the server will bind to.</param>
            <param name="port">The port the server will listen on.</param>
            <param name="options">The TCP server options for configuring the server's behavior.</param>
            <param name="context">The context that provides services and configuration for the server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer.GetAddress">
            <summary>
            Gets the address the server is bound to.
            </summary>
            <returns>The server's IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer.GetPort">
            <summary>
            Gets the port the server is listening on.
            </summary>
            <returns>The server's port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer.CreateSession">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession"/> to handle a WebSocket session.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer">
            <summary>
            Represents a WebSocket Secure (WSS) server that integrates with the ProtonNet framework, 
            allowing for secure WebSocket communication within the socket server context.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer.context">
            <summary>
            Gets the context of the socket server, which provides services and configuration for the server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions,XmobiTea.ProtonNetCommon.SslOptions,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer"/> class with the specified address, port, options, and SSL configuration.
            </summary>
            <param name="address">The IP address the server will bind to.</param>
            <param name="port">The port the server will listen on.</param>
            <param name="options">The TCP server options for configuring the server's behavior.</param>
            <param name="sslOptions">The SSL options for secure communication.</param>
            <param name="context">The context that provides services and configuration for the server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer.GetAddress">
            <summary>
            Gets the address the server is bound to.
            </summary>
            <returns>The server's IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer.GetPort">
            <summary>
            Gets the port the server is listening on.
            </summary>
            <returns>The server's port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer.CreateSession">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession"/> to handle a secure WebSocket session.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService">
            <summary>
            Defines the interface for a service that manages socket controller operations, 
            including handling connections, data reception, disconnections, and errors for socket sessions.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService.OnConnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Invoked when a session is connected.
            </summary>
            <param name="session">The session that has been connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService.OnReceived(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Invoked when data is received from a session.
            </summary>
            <param name="session">The session that received the data.</param>
            <param name="buffer">The buffer containing the received data.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The length of the data in the buffer.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService.OnDisconnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Invoked when a session is disconnected.
            </summary>
            <param name="session">The session that has been disconnected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService.OnError(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Net.Sockets.SocketError)">
            <summary>
            Invoked when a socket error occurs.
            </summary>
            <param name="session">The session in which the error occurred.</param>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService">
            <summary>
            Implements the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService"/> interface to manage socket session events such as 
            connection, data reception, disconnection, and errors. This service coordinates the handling of these events 
            through registered socket controllers.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SessionPerSecondAmount">
            <summary>
            Represents the tracking information for a session, including the timestamp of the last tick,
            the number of requests received in the current second, and the number of pending requests.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SessionPerSecondAmount.LastTick">
            <summary>
            Gets or sets the timestamp of the last tick in ticks (1 tick = 100 nanoseconds).
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SessionPerSecondAmount.AmountInCurrentSecond">
            <summary>
            Gets or sets the number of requests received in the current second.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SessionPerSecondAmount.PendingRequest">
            <summary>
            Gets or sets the number of pending requests for the session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.logger">
            <summary>
            Logger instance for logging information, warnings, and errors related to the socket controller service.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.socketControllerLst">
            <summary>
            A list of socket controllers that manage the handling of socket session events.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.sessionReceiveAtTimeAmountDict">
            <summary>
            A dictionary mapping each session to its corresponding <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SessionPerSecondAmount"/> to track the session's activity.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.socketSessionEmitService">
            <summary>
            Automatically binds the socket session emit service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.byteArrayManagerService">
            <summary>
            Automatically binds the byte array manager service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.maxSession">
            <summary>
            The maximum number of concurrent sessions allowed on the server.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.totalSession">
            <summary>
            The current total number of sessions connected to the server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.maxPendingRequest">
            <summary>
            The maximum number of pending requests that can be queued for processing.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.pendingRequest">
            <summary>
            The current total number of pending requests.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.maxSessionRequestPerSecond">
            <summary>
            The maximum number of requests per second that a single session can send.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.maxSessionPendingRequest">
            <summary>
            The maximum number of pending requests that a single session can have at any given time.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.otherFiber">
            <summary>
            The fiber used for handling non-received events, utilizing a specified number of threads.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.receivedFiber">
            <summary>
            The fiber used for handling received events, utilizing a specified number of threads.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SetOtherFiber(System.Int32)">
            <summary>
            Sets the fiber for handling non-received events with a specified number of threads.
            </summary>
            <param name="threadCount">The number of threads to use for the fiber.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SetReceiveFiber(System.Int32)">
            <summary>
            Sets the fiber for handling received events with a specified number of threads.
            </summary>
            <param name="threadCount">The number of threads to use for the fiber.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SetMaxSession(System.Int32)">
            <summary>
            Sets the maximum number of concurrent sessions allowed on the server.
            </summary>
            <param name="maxSession">The maximum number of sessions.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SetMaxPendingRequest(System.Int32)">
            <summary>
            Sets the maximum number of pending requests that can be queued for processing.
            </summary>
            <param name="maxPendingRequest">The maximum number of pending requests.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SetMaxSessionRequestPerSecond(System.Int32)">
            <summary>
            Sets the maximum number of requests per second that a single session can send.
            </summary>
            <param name="maxSessionRequestPerSecond">The maximum number of requests per second per session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.SetMaxSessionPendingRequest(System.Int32)">
            <summary>
            Sets the maximum number of pending requests that a single session can have at any given time.
            </summary>
            <param name="maxSessionPendingRequest">The maximum number of pending requests per session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.AddSocketController(XmobiTea.ProtonNet.Server.Socket.Controllers.SocketController)">
            <summary>
            Adds a socket controller to the service.
            </summary>
            <param name="socketController">The socket controller to add.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.OnConnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Handles a new session connection event.
            </summary>
            <param name="session">The session that has connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.OnReceived(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles a data reception event for a session.
            </summary>
            <param name="session">The session that received the data.</param>
            <param name="buffer">The buffer containing the received data.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The length of the data in the buffer.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.OnError(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,System.Net.Sockets.SocketError)">
            <summary>
            Handles a socket error event for a session.
            </summary>
            <param name="session">The session where the error occurred.</param>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketControllerService.OnDisconnected(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession)">
            <summary>
            Handles a session disconnection event.
            </summary>
            <param name="session">The session that has been disconnected.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketOperationModelService">
            <summary>
            Defines the interface for handling operations on socket sessions, allowing for the management
            and processing of different operation models based on their type.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketOperationModelService.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.RpcProtocol.Types.OperationType,XmobiTea.ProtonNet.Networking.IOperationModel,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles an operation model for a given session.
            </summary>
            <param name="session">The session that received the operation.</param>
            <param name="operationType">The type of operation being handled.</param>
            <param name="operationModel">The operation model containing the operation data.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use for this operation.</param>
            <param name="cryptoProviderType">The crypto provider type, if any, to use for this operation.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketOperationModelService">
            <summary>
            Implements the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketOperationModelService"/> interface to manage and dispatch operations
            to the appropriate handlers based on the operation type.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketOperationModelService.operationModelHandlerDict">
            <summary>
            Gets the dictionary that maps operation types to their corresponding handlers.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketOperationModelService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketOperationModelService"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketOperationModelService.AddHandler(XmobiTea.ProtonNet.RpcProtocol.Types.OperationType,XmobiTea.ProtonNet.Server.Socket.Handlers.ISocketOperationModelHandler)">
            <summary>
            Adds a handler for a specific operation type.
            </summary>
            <param name="operationType">The type of operation to handle.</param>
            <param name="handler">The handler responsible for processing the operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketOperationModelService.GetHandler(XmobiTea.ProtonNet.RpcProtocol.Types.OperationType)">
            <summary>
            Retrieves the handler for a specific operation type.
            </summary>
            <param name="operationType">The type of operation.</param>
            <returns>The handler for the operation type, or null if no handler is registered.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketOperationModelService.Handle(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.RpcProtocol.Types.OperationType,XmobiTea.ProtonNet.Networking.IOperationModel,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Handles an operation model for a given session by dispatching it to the appropriate handler based on the operation type.
            </summary>
            <param name="session">The session that received the operation.</param>
            <param name="operationType">The type of operation being handled.</param>
            <param name="operationModel">The operation model containing the operation data.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use for this operation.</param>
            <param name="cryptoProviderType">The crypto provider type, if any, to use for this operation.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService">
            <summary>
            Defines the interface for a service responsible for emitting various operations (events, responses, requests, etc.)
            to socket sessions.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationEvent(XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions,XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an operation event to multiple sessions based on the specified options.
            </summary>
            <param name="options">The options for sending the operation event.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationEvent(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an operation event to a single session.
            </summary>
            <param name="session">The session to send the event to.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationEvent(System.Collections.Generic.IEnumerable{XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession},XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an operation event to multiple sessions.
            </summary>
            <param name="sessions">The sessions to send the event to.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <returns>An enumerable of send results for each session.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationResponse(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationResponse,XmobiTea.ProtonNet.Networking.SendParameters,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType},System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Sends an operation response to a single session.
            </summary>
            <param name="session">The session to send the response to.</param>
            <param name="operationResponse">The operation response to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <param name="cryptoProviderType">The crypto provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationRequest(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationRequest,XmobiTea.ProtonNet.Networking.SendParameters,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType},System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Sends an operation request to a single session.
            </summary>
            <param name="session">The session to send the request to.</param>
            <param name="operationRequest">The operation request to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <param name="cryptoProviderType">The crypto provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationPing(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationPing,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a ping operation to a single session.
            </summary>
            <param name="session">The session to send the ping to.</param>
            <param name="operationPing">The ping operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationPong(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationPong,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a pong operation to a single session.
            </summary>
            <param name="session">The session to send the pong to.</param>
            <param name="operationPong">The pong operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationHandshake(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationHandshake,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a handshake operation to a single session.
            </summary>
            <param name="session">The session to send the handshake to.</param>
            <param name="operationHandshake">The handshake operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationHandshakeAck(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationHandshakeAck,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a handshake acknowledgment operation to a single session.
            </summary>
            <param name="session">The session to send the handshake acknowledgment to.</param>
            <param name="operationHandshakeAck">The handshake acknowledgment operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService.SendOperationDisconnect(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationDisconnect,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a disconnect operation to a single session.
            </summary>
            <param name="session">The session to send the disconnect to.</param>
            <param name="operationDisconnect">The disconnect operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions">
            <summary>
            Represents options for sending an operation event, including the targeted receivers and protocols.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions">
            <summary>
            Defines the options for specifying the receivers of the operation event.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.IsAllOnline">
            <summary>
            Gets or sets a value indicating whether the event should be sent to all online users.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.UserIds">
            <summary>
            Gets or sets the list of user IDs to which the event should be sent.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.ChannelIds">
            <summary>
            Gets or sets the list of channel IDs to which the event should be sent.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.Sessions">
            <summary>
            Gets or sets the list of sessions to which the event should be sent.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.SetIsAllOnline(System.Boolean)">
            <summary>
            Sets the option to send the event to all online users.
            </summary>
            <param name="isAllOnline">True to send to all online users, otherwise false.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.SetUserIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the list of user IDs to which the event should be sent.
            </summary>
            <param name="userIds">The list of user IDs.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.SetChannelIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the list of channel IDs to which the event should be sent.
            </summary>
            <param name="channelIds">The list of channel IDs.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions.SetSessions(System.Collections.Generic.IEnumerable{XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession})">
            <summary>
            Sets the list of sessions to which the event should be sent.
            </summary>
            <param name="sessions">The list of sessions.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions">
            <summary>
            Defines the options for specifying the protocols through which the operation event should be sent.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions.IsAllProtocol">
            <summary>
            Gets or sets a value indicating whether the event should be sent through all available protocols.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions.Protocols">
            <summary>
            Gets or sets the list of protocols through which the event should be sent.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions.SetIsAllProtocol(System.Boolean)">
            <summary>
            Sets the option to send the event through all available protocols.
            </summary>
            <param name="isAllProtocol">True to send through all protocols, otherwise false.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions.SetProtocols(System.Collections.Generic.IEnumerable{XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol})">
            <summary>
            Sets the list of protocols through which the event should be sent.
            </summary>
            <param name="protocols">The list of protocols.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions"/>.</returns>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.Receiver">
            <summary>
            Gets or sets the options for specifying the receivers of the operation event.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocol">
            <summary>
            Gets or sets the options for specifying the protocols through which the event should be sent.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.SetReceiver(XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverOptions)">
            <summary>
            Sets the options for specifying the receivers of the operation event.
            </summary>
            <param name="receiver">The receiver options.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.SetReceiverProtocol(XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions.ReceiverProtocolOptions)">
            <summary>
            Sets the options for specifying the protocols through which the event should be sent.
            </summary>
            <param name="receiverProtocol">The receiver protocol options.</param>
            <returns>The current instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService">
            <summary>
            Implements the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService"/> interface to handle the emission of various operations
            (events, responses, etc.) to socket sessions, including encryption and protocol handling.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.rpcProtocolService">
            <summary>
            Automatically binds the RPC protocol service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.sessionService">
            <summary>
            Automatically binds the session service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.channelService">
            <summary>
            Automatically binds the channel service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.userPeerService">
            <summary>
            Automatically binds the user peer service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationEvent(XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions,XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an operation event to multiple sessions based on the specified options.
            </summary>
            <param name="options">The options for sending the operation event.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationEvent(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an operation event to a single session.
            </summary>
            <param name="session">The session to send the event to.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationEvent(System.Collections.Generic.IEnumerable{XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession},XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an operation event to multiple sessions.
            </summary>
            <param name="sessions">The sessions to send the event to.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <returns>An enumerable of send results for each session.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationResponse(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationResponse,XmobiTea.ProtonNet.Networking.SendParameters,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType},System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Sends an operation response to a single session.
            </summary>
            <param name="session">The session to send the response to.</param>
            <param name="operationResponse">The operation response to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <param name="cryptoProviderType">The crypto provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationRequest(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationRequest,XmobiTea.ProtonNet.Networking.SendParameters,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType},System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType})">
            <summary>
            Sends an operation request to a single session.
            </summary>
            <param name="session">The session to send the request to.</param>
            <param name="operationRequest">The operation request to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <param name="cryptoProviderType">The crypto provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationPing(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationPing,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a ping operation to a single session.
            </summary>
            <param name="session">The session to send the ping to.</param>
            <param name="operationPing">The ping operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationPong(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationPong,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a pong operation to a single session.
            </summary>
            <param name="session">The session to send the pong to.</param>
            <param name="operationPong">The pong operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationHandshake(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationHandshake,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a handshake operation to a single session.
            </summary>
            <param name="session">The session to send the handshake to.</param>
            <param name="operationHandshake">The handshake operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationHandshakeAck(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationHandshakeAck,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a handshake acknowledgment operation to a single session.
            </summary>
            <param name="session">The session to send the handshake acknowledgment to.</param>
            <param name="operationHandshakeAck">The handshake acknowledgment operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendOperationDisconnect(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.Networking.OperationDisconnect,System.Nullable{XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType})">
            <summary>
            Sends a disconnect operation to a single session.
            </summary>
            <param name="session">The session to send the disconnect to.</param>
            <param name="operationDisconnect">The disconnect operation to send.</param>
            <param name="protocolProviderType">The protocol provider type, if any.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.GetSessions(XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions)">
            <summary>
            Retrieves the sessions based on the specified <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SendOperationEventOptions"/>.
            </summary>
            <param name="options">The options for selecting the sessions.</param>
            <returns>An enumerable of the selected sessions.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendEncryptOperationEvent(System.Collections.Generic.IEnumerable{XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession},XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an encrypted operation event to multiple sessions.
            </summary>
            <param name="sessions">The sessions to send the event to.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <returns>An enumerable of send results for each session.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendUnencryptOperationEvent(System.Collections.Generic.IEnumerable{XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession},XmobiTea.ProtonNet.Networking.OperationEvent,XmobiTea.ProtonNet.Networking.SendParameters)">
            <summary>
            Sends an unencrypted operation event to multiple sessions.
            </summary>
            <param name="sessions">The sessions to send the event to.</param>
            <param name="operationEvent">The operation event to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <returns>An enumerable of send results for each session.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendEncryptOperationModel(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.RpcProtocol.Types.OperationType,XmobiTea.ProtonNet.Networking.IOperationModel,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType,XmobiTea.ProtonNet.RpcProtocol.Types.CryptoProviderType)">
            <summary>
            Sends an encrypted operation model to a session.
            </summary>
            <param name="session">The session to send the operation model to.</param>
            <param name="operationType">The type of the operation.</param>
            <param name="operationModel">The operation model to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use.</param>
            <param name="cryptoProviderType">The crypto provider type to use.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionEmitService.SendUnencryptOperationModel(XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession,XmobiTea.ProtonNet.RpcProtocol.Types.OperationType,XmobiTea.ProtonNet.Networking.IOperationModel,XmobiTea.ProtonNet.Networking.SendParameters,XmobiTea.ProtonNet.RpcProtocol.Types.ProtocolProviderType)">
            <summary>
            Sends an unencrypted operation model to a session.
            </summary>
            <param name="session">The session to send the operation model to.</param>
            <param name="operationType">The type of the operation.</param>
            <param name="operationModel">The operation model to send.</param>
            <param name="sendParameters">The parameters controlling how the data is sent.</param>
            <param name="protocolProviderType">The protocol provider type to use.</param>
            <returns>The result of the send operation.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionTimeService">
            <summary>
            Provides an interface for managing the session time service in a socket server.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService">
            <summary>
            Implements the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionTimeService"/> to manage session timeouts
            such as handshake and idle timeouts for socket sessions.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService"/> class and starts the session checking loop.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService.SetHandshakeTimeoutInSeconds(System.Int32)">
            <summary>
            Sets the handshake timeout in seconds, which will be converted to ticks.
            </summary>
            <param name="handshakeTimeoutInSeconds">The handshake timeout in seconds.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService.SetIdleTimeoutInSeconds(System.Int32)">
            <summary>
            Sets the idle timeout in seconds, which will be converted to ticks.
            </summary>
            <param name="idleTimeoutInSeconds">The idle timeout in seconds.</param>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService.sessionService">
            <summary>
            Automatically binds the session service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService.socketSessionEmitService">
            <summary>
            Automatically binds the socket session emit service using the <see cref="T:XmobiTea.Bean.Attributes.AutoBindAttribute"/>.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Services.SocketSessionTimeService.CheckSessions">
            <summary>
            Checks the sessions periodically to enforce handshake and idle timeouts, disconnecting sessions as necessary.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession">
            <summary>
            Defines the interface for a socket session, providing methods for sending data, managing session state,
            and handling encryption and session time.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession.GetTransportProtocol">
            <summary>
            Gets the transport protocol used by this session.
            </summary>
            <returns>The transport protocol.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession.GetSessionTime">
            <summary>
            Gets the session time management service.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Models.ISocketSessionTime"/> representing the session time management service.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession.Send(System.Byte[])">
            <summary>
            Sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession.SendAsync(System.Byte[])">
            <summary>
            Asynchronously sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the data was successfully sent, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession.Disconnect(System.Int32)">
            <summary>
            Disconnects the session after a specified delay.
            </summary>
            <param name="afterMilliseconds">The delay in milliseconds before disconnecting.</param>
            <returns>True if the session was scheduled to disconnect, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.ISocketSession.IsConnected">
            <summary>
            Determines whether the session is currently connected.
            </summary>
            <returns>True if connected, otherwise false.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession">
            <summary>
            Represents an SSL session for handling client connections, sending and receiving data,
            and managing session-specific state in a secure manner.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.controllerService">
            <summary>
            Gets the controller service responsible for handling various socket events.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.byteArrayManagerService">
            <summary>
            Gets the byte array manager service to clone byte array
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.sessionTime">
            <summary>
            Gets the session time management service.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.#ctor(XmobiTea.ProtonNet.Server.Socket.Server.SocketSslServer,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession"/> class using the specified server and context.
            </summary>
            <param name="server">The SSL server associated with this session.</param>
            <param name="context">The server context providing necessary services.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetTransportProtocol">
            <summary>
            Gets the transport protocol used by this session.
            </summary>
            <returns>The transport protocol.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.IsConnected">
            <summary>
            Determines whether the session is currently connected.
            </summary>
            <returns>True if connected, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetConnectionId">
            <summary>
            Gets the unique connection ID for this session.
            </summary>
            <returns>The connection ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetServerSessionId">
            <summary>
            Gets the server-side session ID.
            </summary>
            <returns>The server session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetEncryptKey">
            <summary>
            Gets the encryption key used by this session.
            </summary>
            <returns>The encryption key.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetSessionId">
            <summary>
            Gets the client-side session ID.
            </summary>
            <returns>The session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetRemoteIP">
            <summary>
            Gets the remote IP address of the connected client.
            </summary>
            <returns>The remote IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetRemotePort">
            <summary>
            Gets the remote port number of the connected client.
            </summary>
            <returns>The remote port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.SetSessionId(System.String)">
            <summary>
            Sets the client-side session ID.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.SetEncryptKey(System.Byte[])">
            <summary>
            Sets the encryption key used by this session.
            </summary>
            <param name="encryptKey">The encryption key.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetFiber">
            <summary>
            Gets the fiber associated with this session for scheduling tasks.
            </summary>
            <returns>The fiber.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.GetSessionTime">
            <summary>
            Gets the session time management service.
            </summary>
            <returns>The session time management service.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.OnConnected">
            <summary>
            Handles the event when the SSL connection is established.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles the event when data is received over the SSL connection.
            </summary>
            <param name="buffer">The data buffer.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The length of the data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors that occur during the session.
            </summary>
            <param name="error">The socket error.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.OnDisconnected">
            <summary>
            Handles the event when the SSL connection is disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.Disconnect(System.Int32)">
            <summary>
            Disconnects the session after a specified delay.
            </summary>
            <param name="afterMilliseconds">The delay in milliseconds before disconnecting.</param>
            <returns>True if the session was scheduled to disconnect, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketSslSession.Dispose(System.Boolean)">
            <summary>
            Disposes the session, releasing any managed resources.
            </summary>
            <param name="disposingManagedResources">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession">
            <summary>
            Represents a TCP session for handling client connections, sending and receiving data,
            and managing session-specific state.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.controllerService">
            <summary>
            Gets the controller service responsible for handling various socket events.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.byteArrayManagerService">
            <summary>
            Gets the byte array manager service to clone byte array
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.sessionTime">
            <summary>
            Gets the session time management service.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.#ctor(XmobiTea.ProtonNet.Server.Socket.Server.SocketTcpServer,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession"/> class using the specified server and context.
            </summary>
            <param name="server">The TCP server associated with this session.</param>
            <param name="context">The server context providing necessary services.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetTransportProtocol">
            <summary>
            Gets the transport protocol used by this session.
            </summary>
            <returns>The transport protocol.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.IsConnected">
            <summary>
            Determines whether the session is currently connected.
            </summary>
            <returns>True if connected, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetConnectionId">
            <summary>
            Gets the unique connection ID for this session.
            </summary>
            <returns>The connection ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetServerSessionId">
            <summary>
            Gets the server-side session ID.
            </summary>
            <returns>The server session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetEncryptKey">
            <summary>
            Gets the encryption key used by this session.
            </summary>
            <returns>The encryption key.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetSessionId">
            <summary>
            Gets the client-side session ID.
            </summary>
            <returns>The session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetRemoteIP">
            <summary>
            Gets the remote IP address of the connected client.
            </summary>
            <returns>The remote IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetRemotePort">
            <summary>
            Gets the remote port number of the connected client.
            </summary>
            <returns>The remote port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.SetSessionId(System.String)">
            <summary>
            Sets the client-side session ID.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.SetEncryptKey(System.Byte[])">
            <summary>
            Sets the encryption key used by this session.
            </summary>
            <param name="encryptKey">The encryption key.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetFiber">
            <summary>
            Gets the fiber associated with this session for scheduling tasks.
            </summary>
            <returns>The fiber.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.GetSessionTime">
            <summary>
            Gets the session time management service.
            </summary>
            <returns>The session time management service.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.OnConnected">
            <summary>
            Handles the event when the TCP connection is established.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles the event when data is received over the TCP connection.
            </summary>
            <param name="buffer">The data buffer.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The length of the data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors that occur during the session.
            </summary>
            <param name="error">The socket error.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.OnDisconnected">
            <summary>
            Handles the event when the TCP connection is disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.Disconnect(System.Int32)">
            <summary>
            Disconnects the session after a specified delay.
            </summary>
            <param name="afterMilliseconds">The delay in milliseconds before disconnecting.</param>
            <returns>True if the session was scheduled to disconnect, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketTcpSession.Dispose(System.Boolean)">
            <summary>
            Disposes the session, releasing any managed resources.
            </summary>
            <param name="disposingManagedResources">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession">
            <summary>
            Represents a UDP session for handling client connections, sending and receiving data,
            and managing session-specific state.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.controllerService">
            <summary>
            Gets the controller service responsible for handling various socket events.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.byteArrayManagerService">
            <summary>
            Gets the byte array manager service to clone byte array
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.sessionTime">
            <summary>
            Gets the session time management service.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.#ctor(XmobiTea.ProtonNet.Server.Socket.Server.SocketUdpServer,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession"/> class using the specified server and context.
            </summary>
            <param name="server">The UDP server associated with this session.</param>
            <param name="context">The server context providing necessary services.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetTransportProtocol">
            <summary>
            Gets the transport protocol used by this session.
            </summary>
            <returns>The transport protocol.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.IsConnected">
            <summary>
            Determines whether the session is currently connected.
            </summary>
            <returns>True if connected, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetConnectionId">
            <summary>
            Gets the unique connection ID for this session.
            </summary>
            <returns>The connection ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetServerSessionId">
            <summary>
            Gets the server-side session ID.
            </summary>
            <returns>The server session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetEncryptKey">
            <summary>
            Gets the encryption key used by this session.
            </summary>
            <returns>The encryption key.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetSessionId">
            <summary>
            Gets the client-side session ID.
            </summary>
            <returns>The session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetRemoteIP">
            <summary>
            Gets the remote IP address of the connected client.
            </summary>
            <returns>The remote IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetRemotePort">
            <summary>
            Gets the remote port number of the connected client.
            </summary>
            <returns>The remote port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.SetSessionId(System.String)">
            <summary>
            Sets the client-side session ID.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.SetEncryptKey(System.Byte[])">
            <summary>
            Sets the encryption key used by this session.
            </summary>
            <param name="encryptKey">The encryption key.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetFiber">
            <summary>
            Gets the fiber associated with this session for scheduling tasks.
            </summary>
            <returns>The fiber.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.GetSessionTime">
            <summary>
            Gets the session time management service.
            </summary>
            <returns>The session time management service.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.OnConnected">
            <summary>
            Handles the event when the UDP connection is established.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles the event when data is received over the UDP connection.
            </summary>
            <param name="buffer">The data buffer.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The length of the data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors that occur during the session.
            </summary>
            <param name="error">The socket error.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.OnDisconnected">
            <summary>
            Handles the event when the UDP connection is disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.Disconnect(System.Int32)">
            <summary>
            Disconnects the session after a specified delay.
            </summary>
            <param name="afterMilliseconds">The delay in milliseconds before disconnecting.</param>
            <returns>True if the session was scheduled to disconnect, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketUdpSession.Dispose(System.Boolean)">
            <summary>
            Disposes the session, releasing any managed resources.
            </summary>
            <param name="disposingManagedResources">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession">
            <summary>
            Represents a WebSocket (WS) session for handling client connections,
            sending and receiving data, and managing session-specific state.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.controllerService">
            <summary>
            Gets the controller service responsible for handling various socket events.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.byteArrayManagerService">
            <summary>
            Gets the byte array manager service to clone byte array
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.sessionTime">
            <summary>
            Gets the session time management service.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.#ctor(XmobiTea.ProtonNet.Server.Socket.Server.SocketWsServer,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession"/> class using the specified server and context.
            </summary>
            <param name="server">The WS server associated with this session.</param>
            <param name="context">The server context providing necessary services.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetTransportProtocol">
            <summary>
            Gets the transport protocol used by this session.
            </summary>
            <returns>The transport protocol.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.IsConnected">
            <summary>
            Determines whether the session is currently connected.
            </summary>
            <returns>True if connected, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetConnectionId">
            <summary>
            Gets the unique connection ID for this session.
            </summary>
            <returns>The connection ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetServerSessionId">
            <summary>
            Gets the server-side session ID.
            </summary>
            <returns>The server session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetEncryptKey">
            <summary>
            Gets the encryption key used by this session.
            </summary>
            <returns>The encryption key.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetSessionId">
            <summary>
            Gets the client-side session ID.
            </summary>
            <returns>The session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetRemoteIP">
            <summary>
            Gets the remote IP address of the connected client.
            </summary>
            <returns>The remote IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetRemotePort">
            <summary>
            Gets the remote port number of the connected client.
            </summary>
            <returns>The remote port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.SetSessionId(System.String)">
            <summary>
            Sets the client-side session ID.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.SetEncryptKey(System.Byte[])">
            <summary>
            Sets the encryption key used by this session.
            </summary>
            <param name="encryptKey">The encryption key.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetFiber">
            <summary>
            Gets the fiber associated with this session for scheduling tasks.
            </summary>
            <returns>The fiber.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.GetSessionTime">
            <summary>
            Gets the session time management service.
            </summary>
            <returns>The session time management service.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.OnWsConnected(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Handles the event when the WebSocket connection is established.
            </summary>
            <param name="request">The HTTP request associated with the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.OnWsReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles the event when data is received over the WebSocket connection.
            </summary>
            <param name="buffer">The data buffer.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The length of the data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors that occur during the session.
            </summary>
            <param name="error">The socket error.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.OnWsDisconnected">
            <summary>
            Handles the event when the WebSocket connection is disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.Send(System.Byte[])">
            <summary>
            Sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.SendAsync(System.Byte[])">
            <summary>
            Asynchronously sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the data was successfully sent, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.Disconnect(System.Int32)">
            <summary>
            Disconnects the session after a specified delay.
            </summary>
            <param name="afterMilliseconds">The delay in milliseconds before disconnecting.</param>
            <returns>True if the session was scheduled to disconnect, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWsSession.Dispose(System.Boolean)">
            <summary>
            Disposes the session, releasing any managed resources.
            </summary>
            <param name="disposingManagedResources">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession">
            <summary>
            Represents a WebSocket Secure (WSS) session for handling client connections,
            sending and receiving data, and managing session-specific state.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.controllerService">
            <summary>
            Gets the controller service responsible for handling various socket events.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.byteArrayManagerService">
            <summary>
            Gets the byte array manager service to clone byte array
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.sessionTime">
            <summary>
            Gets the session time management service.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.#ctor(XmobiTea.ProtonNet.Server.Socket.Server.SocketWssServer,XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession"/> class using the specified server and context.
            </summary>
            <param name="server">The WSS server associated with this session.</param>
            <param name="context">The server context providing necessary services.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetTransportProtocol">
            <summary>
            Gets the transport protocol used by this session.
            </summary>
            <returns>The transport protocol.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.IsConnected">
            <summary>
            Determines whether the session is currently connected.
            </summary>
            <returns>True if connected, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetConnectionId">
            <summary>
            Gets the unique connection ID for this session.
            </summary>
            <returns>The connection ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetServerSessionId">
            <summary>
            Gets the server-side session ID.
            </summary>
            <returns>The server session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetEncryptKey">
            <summary>
            Gets the encryption key used by this session.
            </summary>
            <returns>The encryption key.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetSessionId">
            <summary>
            Gets the client-side session ID.
            </summary>
            <returns>The session ID.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetRemoteIP">
            <summary>
            Gets the remote IP address of the connected client.
            </summary>
            <returns>The remote IP address.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetRemotePort">
            <summary>
            Gets the remote port number of the connected client.
            </summary>
            <returns>The remote port number.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.SetSessionId(System.String)">
            <summary>
            Sets the client-side session ID.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.SetEncryptKey(System.Byte[])">
            <summary>
            Sets the encryption key used by this session.
            </summary>
            <param name="encryptKey">The encryption key.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetFiber">
            <summary>
            Gets the fiber associated with this session for scheduling tasks.
            </summary>
            <returns>The fiber.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.GetSessionTime">
            <summary>
            Gets the session time management service.
            </summary>
            <returns>The session time management service.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.OnWsConnected(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Handles the event when the WebSocket connection is established.
            </summary>
            <param name="request">The HTTP request associated with the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.OnWsReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles the event when data is received over the WebSocket connection.
            </summary>
            <param name="buffer">The data buffer.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The length of the data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors that occur during the session.
            </summary>
            <param name="error">The socket error.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.OnWsDisconnected">
            <summary>
            Handles the event when the WebSocket connection is disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.Send(System.Byte[])">
            <summary>
            Sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.SendAsync(System.Byte[])">
            <summary>
            Asynchronously sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the data was successfully sent, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.Disconnect(System.Int32)">
            <summary>
            Disconnects the session after a specified delay.
            </summary>
            <param name="afterMilliseconds">The delay in milliseconds before disconnecting.</param>
            <returns>True if the session was scheduled to disconnect, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.Sessions.SocketWssSession.Dispose(System.Boolean)">
            <summary>
            Disposes the session, releasing any managed resources.
            </summary>
            <param name="disposingManagedResources">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.SocketServer">
            <summary>
            Represents the implementation of the SocketServer class, providing methods to initialize, start, 
            and stop the server, along with various utility and configuration methods.
            </summary>
            <summary>
            Represents the partial implementation of the SocketServer class, 
            responsible for creating and configuring various services and components 
            required for server operation.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.#ctor(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SocketServer"/> class using the specified startup settings.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.Start">
            <summary>
            Starts the server by initiating all configured socket servers and related services.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.Stop">
            <summary>
            Stops the server by stopping all active socket servers and related services.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.GetContext">
            <summary>
            Gets the server context containing various services and configuration.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.GetNetworkStatistics">
            <summary>
            Gets the network statistics service used by the server.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.IServerNetworkStatistics"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateOtherSingleton(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes additional singleton services required by the server.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateApplicationAssemblies(XmobiTea.ProtonNet.Server.Socket.StartupSettings,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Creates and initializes the necessary assemblies for application-specific components.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <param name="assemblies">The assemblies to scan and initialize.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.GetTcpServerOptions(XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings)">
            <summary>
            Generates TCP server options based on the provided session configuration.
            </summary>
            <param name="sessionConfig">The session configuration settings.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetServer.Options.TcpServerOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.GetUdpServerOptions(XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings)">
            <summary>
            Generates UDP server options based on the provided session configuration.
            </summary>
            <param name="sessionConfig">The UDP session configuration settings.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetServer.Options.UdpServerOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.GetSslOptions(XmobiTea.ProtonNet.Server.Socket.SslConfigSettings)">
            <summary>
            Generates SSL options based on the provided SSL configuration.
            </summary>
            <param name="sslConfig">The SSL configuration settings.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.SslOptions"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateContext(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the server context containing session-related services.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Context.ISocketServerContext"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketTcpServer(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the TCP socket server.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.IServer"/> representing the TCP server, or null if not enabled.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketSslServer(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the SSL-enabled TCP socket server.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.IServer"/> representing the SSL TCP server, or null if not enabled.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketUdpServer(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the UDP socket server.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.IServer"/> representing the UDP server, or null if not enabled.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketWsServer(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the WebSocket server.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.IServer"/> representing the WebSocket server, or null if not enabled.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketWssServer(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the SSL-enabled WebSocket server.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Server.IServer"/> representing the SSL WebSocket server, or null if not enabled.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.SetupSingleton">
            <summary>
            Sets up singleton instances for classes marked with attributes.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSingletonClassesAttribute">
            <summary>
            Automatically creates singleton instances for classes with the <see cref="T:XmobiTea.Bean.Attributes.SingletonAttribute"/>.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.AutoBindSingletonObjects">
            <summary>
            Automatically binds singleton objects to the bean context.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.ShowPort(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Display the port information in the logs.
            </summary>
            <param name="startupSettings"></param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.ShowBanner">
            <summary>
            Displays the server banner in the logs.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.OnStarting">
            <summary>
            Invoked during the server startup process before the server is fully started.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.OnStarted">
            <summary>
            Invoked after the server has successfully started.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.OnStopping">
            <summary>
            Invoked during the server shutdown process before the server is fully stopped.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.OnStopped">
            <summary>
            Invoked after the server has successfully stopped.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateBeanContext(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the bean context used for dependency injection.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.Bean.IBeanContext"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateNetworkStatistics(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the network statistics service for the server.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.IServerNetworkStatistics"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketOperationModelService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the socket operation model service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketOperationModelService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateDataConverter(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the data converter service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.Data.Converter.IDataConverter"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketSessionTimeService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the socket session time service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionTimeService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSessionService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the session service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.ISessionService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateUserPeerSessionService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the user peer session service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IUserPeerSessionService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateUserPeerService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the user peer service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IUserPeerService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateInitRequestProviderService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the init request provider service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IInitRequestProviderService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateByteArrayManagerService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the byte array manager service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IInitRequestProviderService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateSocketSessionEmitService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the socket session emit service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketSessionEmitService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateChannelService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the channel service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IChannelService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateUserPeerAuthTokenService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and returns a new IUserPeerAuthTokenService instance based on the provided startup settings.
            </summary>
            <param name="startupSettings">The startup settings for configuring the user peer auth token service.</param>
            <returns>Returns a new IUserPeerAuthTokenService instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateRpcProtocolService(XmobiTea.ProtonNet.Server.Socket.StartupSettings)">
            <summary>
            Creates and initializes the RPC protocol service.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IRpcProtocolService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateControllerService(XmobiTea.ProtonNet.Server.Socket.StartupSettings,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Creates and initializes the socket controller service, scanning for and adding controllers.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <param name="assemblies">The assemblies to scan for socket controllers.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.Services.ISocketControllerService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateRequestService(XmobiTea.ProtonNet.Server.Socket.StartupSettings,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Creates and initializes the request service, scanning for and adding request handlers.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <param name="assemblies">The assemblies to scan for request handlers.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IRequestService"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SocketServer.CreateEventService(XmobiTea.ProtonNet.Server.Socket.StartupSettings,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Creates and initializes the event service, scanning for and adding event handlers.
            </summary>
            <param name="startupSettings">The startup settings configuration.</param>
            <param name="assemblies">The assemblies to scan for event handlers.</param>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNet.Server.Services.IEventService"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings">
            <summary>
            Settings auth token service
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Password">
            <summary>
            Gets the password of UserPeerAuthTokenService
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Builder"/> class.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Builder"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Builder">
            <summary>
            Builder for ThreadPoolSizeSettings
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Builder.Password">
            <summary>
            Gets or sets the password of UserPeerAuthTokenService.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Builder.SetPassword(System.String)">
            <summary>
            Sets the password of UserPeerAuthTokenService.
            </summary>
            <param name="password">The password of UserPeerAuthTokenService.</param>
            <returns>The current <see cref="T:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Builder"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings.Builder.Build">
            <summary>
            Builds a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings"/> class.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings"/> instance.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings">
            <summary>
            Represents the settings for thread pool size, specifically for different types of fibers.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.OtherFiber">
            <summary>
            Gets the size of the other fiber in the thread pool.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.ReceivedFiber">
            <summary>
            Gets the size of the received fiber in the thread pool.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the thread pool size settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder.OtherFiber">
            <summary>
            Gets or sets the size of the other fiber in the thread pool.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder.ReceivedFiber">
            <summary>
            Gets or sets the size of the received fiber in the thread pool.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder.SetOtherFiber(System.Byte)">
            <summary>
            Sets the size of the other fiber in the thread pool.
            </summary>
            <param name="otherFiber">The size of the other fiber.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder.SetReceivedFiber(System.Byte)">
            <summary>
            Sets the size of the received fiber in the thread pool.
            </summary>
            <param name="receivedFiber">The size of the received fiber.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings">
            <summary>
            Represents the SSL configuration settings, including enabling SSL, port number, 
            certificate file path, and certificate password.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Enable">
            <summary>
            Gets a value indicating whether SSL is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Port">
            <summary>
            Gets the port number used for SSL.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.CertFilePath">
            <summary>
            Gets the file path to the SSL certificate.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.CertPassword">
            <summary>
            Gets the password for the SSL certificate.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the SSL settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.Enable">
            <summary>
            Gets or sets a value indicating whether SSL is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.Port">
            <summary>
            Gets or sets the port number used for SSL.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.CertFilePath">
            <summary>
            Gets or sets the file path to the SSL certificate.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.CertPassword">
            <summary>
            Gets or sets the password for the SSL certificate.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.SetEnable(System.Boolean)">
            <summary>
            Sets a value indicating whether SSL is enabled.
            </summary>
            <param name="enable">A boolean value indicating whether SSL is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.SetPort(System.Int32)">
            <summary>
            Sets the port number used for SSL.
            </summary>
            <param name="port">The port number.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.SetCertFilePath(System.String)">
            <summary>
            Sets the file path to the SSL certificate.
            </summary>
            <param name="certFilePath">The file path to the SSL certificate.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.SetCertPassword(System.String)">
            <summary>
            Sets the password for the SSL certificate.
            </summary>
            <param name="password">The password for the SSL certificate.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SslConfigSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings">
            <summary>
            Represents the TCP server configuration settings, including enabling the server,
            address, port, session configuration, and SSL configuration.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Enable">
            <summary>
            Gets a value indicating whether the TCP server is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Address">
            <summary>
            Gets the address where the TCP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Port">
            <summary>
            Gets the port number on which the TCP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.SessionConfig">
            <summary>
            Gets the session configuration settings for the TCP server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.SslConfig">
            <summary>
            Gets the SSL configuration settings for the TCP server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the TCP server settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.Enable">
            <summary>
            Gets or sets a value indicating whether the TCP server is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.Address">
            <summary>
            Gets or sets the address where the TCP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.Port">
            <summary>
            Gets or sets the port number on which the TCP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.SessionConfig">
            <summary>
            Gets or sets the session configuration settings for the TCP server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.SslConfig">
            <summary>
            Gets or sets the SSL configuration settings for the TCP server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.SetEnable(System.Boolean)">
            <summary>
            Sets a value indicating whether the TCP server is enabled.
            </summary>
            <param name="enable">A boolean value indicating whether the TCP server is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.SetAddress(System.String)">
            <summary>
            Sets the address where the TCP server will listen.
            </summary>
            <param name="address">The address where the TCP server will listen.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.SetPort(System.Int32)">
            <summary>
            Sets the port number on which the TCP server will listen.
            </summary>
            <param name="port">The port number.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.SetSessionConfig(XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings)">
            <summary>
            Sets the session configuration settings for the TCP server.
            </summary>
            <param name="sessionConfig">The session configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.SetSslConfig(XmobiTea.ProtonNet.Server.Socket.SslConfigSettings)">
            <summary>
            Sets the SSL configuration settings for the TCP server.
            </summary>
            <param name="sslConfig">The SSL configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.TcpServerSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings">
            <summary>
            Represents the UDP server configuration settings, including enabling the server,
            address, port, and session configuration.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Enable">
            <summary>
            Gets a value indicating whether the UDP server is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Address">
            <summary>
            Gets the address where the UDP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Port">
            <summary>
            Gets the port number on which the UDP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.SessionConfig">
            <summary>
            Gets the session configuration settings for the UDP server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the UDP server settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.Enable">
            <summary>
            Gets or sets a value indicating whether the UDP server is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.Address">
            <summary>
            Gets or sets the address where the UDP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.Port">
            <summary>
            Gets or sets the port number on which the UDP server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.SessionConfig">
            <summary>
            Gets or sets the session configuration settings for the UDP server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.SetEnable(System.Boolean)">
            <summary>
            Sets a value indicating whether the UDP server is enabled.
            </summary>
            <param name="enable">A boolean value indicating whether the UDP server is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.SetAddress(System.String)">
            <summary>
            Sets the address where the UDP server will listen.
            </summary>
            <param name="address">The address where the UDP server will listen.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.SetPort(System.Int32)">
            <summary>
            Sets the port number on which the UDP server will listen.
            </summary>
            <param name="port">The port number.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.SetSessionConfig(XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings)">
            <summary>
            Sets the session configuration settings for the UDP server.
            </summary>
            <param name="sessionConfig">The session configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpServerSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings">
            <summary>
            Represents the WebSocket server configuration settings, including enabling the server,
            address, port, maximum frame size, session configuration, and SSL configuration.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Enable">
            <summary>
            Gets a value indicating whether the WebSocket server is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Address">
            <summary>
            Gets the address where the WebSocket server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Port">
            <summary>
            Gets the port number on which the WebSocket server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.MaxFrameSize">
            <summary>
            Gets the maximum frame size for the WebSocket server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.SessionConfig">
            <summary>
            Gets the session configuration settings for the WebSocket server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.SslConfig">
            <summary>
            Gets the SSL configuration settings for the WebSocket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the WebSocket server settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.Enable">
            <summary>
            Gets or sets a value indicating whether the WebSocket server is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.Address">
            <summary>
            Gets or sets the address where the WebSocket server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.Port">
            <summary>
            Gets or sets the port number on which the WebSocket server will listen.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.MaxFrameSize">
            <summary>
            Gets or sets the maximum frame size for the WebSocket server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SessionConfig">
            <summary>
            Gets or sets the session configuration settings for the WebSocket server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SslConfig">
            <summary>
            Gets or sets the SSL configuration settings for the WebSocket server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SetEnable(System.Boolean)">
            <summary>
            Sets a value indicating whether the WebSocket server is enabled.
            </summary>
            <param name="enable">A boolean value indicating whether the WebSocket server is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SetAddress(System.String)">
            <summary>
            Sets the address where the WebSocket server will listen.
            </summary>
            <param name="address">The address where the WebSocket server will listen.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SetPort(System.Int32)">
            <summary>
            Sets the port number on which the WebSocket server will listen.
            </summary>
            <param name="port">The port number.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SetMaxFrameSize(System.Int32)">
            <summary>
            Sets the maximum frame size for the WebSocket server.
            </summary>
            <param name="maxFrameSize">The maximum frame size.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SetSessionConfig(XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings)">
            <summary>
            Sets the session configuration settings for the WebSocket server.
            </summary>
            <param name="sessionConfig">The session configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.SetSslConfig(XmobiTea.ProtonNet.Server.Socket.SslConfigSettings)">
            <summary>
            Sets the SSL configuration settings for the WebSocket server.
            </summary>
            <param name="sslConfig">The SSL configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings">
            <summary>
            Represents the session configuration settings, including various TCP and buffer settings
            for optimizing network communication.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.AcceptorBacklog">
            <summary>
            Gets the backlog limit for accepting connections.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.DualMode">
            <summary>
            Gets a value indicating whether dual-mode sockets are enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.KeepAlive">
            <summary>
            Gets a value indicating whether the keep-alive option is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.TcpKeepAliveTime">
            <summary>
            Gets the keep-alive time for TCP connections in seconds.
            Only available on .NET Core
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.TcpKeepAliveInterval">
            <summary>
            Gets the interval between keep-alive probes for TCP connections in seconds.
            Only available on .NET Core
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.TcpKeepAliveRetryCount">
            <summary>
            Gets the number of keep-alive probes before timing out the TCP connection.
            Only available on .NET Core
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.NoDelay">
            <summary>
            Gets a value indicating whether the Nagle's algorithm is disabled (NoDelay).
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.ReuseAddress">
            <summary>
            Gets a value indicating whether the address can be reused.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.ExclusiveAddressUse">
            <summary>
            Gets a value indicating whether the socket will have exclusive access to the address.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.ReceiveBufferLimit">
            <summary>
            Gets the limit for the receive buffer size in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.ReceiveBufferCapacity">
            <summary>
            Gets the capacity of the receive buffer in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.SendBufferLimit">
            <summary>
            Gets the limit for the send buffer size in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.SendBufferCapacity">
            <summary>
            Gets the capacity of the send buffer in bytes.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the session settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.AcceptorBacklog">
            <summary>
            Gets or sets the backlog limit for accepting connections.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.DualMode">
            <summary>
            Gets or sets a value indicating whether dual-mode sockets are enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.KeepAlive">
            <summary>
            Gets or sets a value indicating whether the keep-alive option is enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.TcpKeepAliveTime">
            <summary>
            Gets or sets the keep-alive time for TCP connections in seconds.
            Only available on .NET Core
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.TcpKeepAliveInterval">
            <summary>
            Gets or sets the interval between keep-alive probes for TCP connections in seconds.
            Only available on .NET Core
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.TcpKeepAliveRetryCount">
            <summary>
            Gets or sets the number of keep-alive probes before timing out the TCP connection.
            Only available on .NET Core
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.NoDelay">
            <summary>
            Gets or sets a value indicating whether the Nagle's algorithm is disabled (NoDelay).
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.ReuseAddress">
            <summary>
            Gets or sets a value indicating whether the address can be reused.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.ExclusiveAddressUse">
            <summary>
            Gets or sets a value indicating whether the socket will have exclusive access to the address.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.ReceiveBufferLimit">
            <summary>
            Gets or sets the limit for the receive buffer size in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.ReceiveBufferCapacity">
            <summary>
            Gets or sets the capacity of the receive buffer in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SendBufferLimit">
            <summary>
            Gets or sets the limit for the send buffer size in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SendBufferCapacity">
            <summary>
            Gets or sets the capacity of the send buffer in bytes.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetAcceptorBacklog(System.Int32)">
            <summary>
            Sets the backlog limit for accepting connections.
            </summary>
            <param name="acceptorBacklog">The backlog limit.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetDualMode(System.Boolean)">
            <summary>
            Sets a value indicating whether dual-mode sockets are enabled.
            </summary>
            <param name="dualMode">A boolean value indicating whether dual-mode sockets are enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetKeepAlive(System.Boolean)">
            <summary>
            Sets a value indicating whether the keep-alive option is enabled.
            </summary>
            <param name="keepAlive">A boolean value indicating whether the keep-alive option is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetTcpKeepAliveTime(System.Int32)">
            <summary>
            Sets the keep-alive time for TCP connections in seconds.
            Only available on .NET Core
            </summary>
            <param name="tcpKeepAliveTime">The keep-alive time in seconds.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetTcpKeepAliveInterval(System.Int32)">
            <summary>
            Sets the interval between keep-alive probes for TCP connections in seconds.
            Only available on .NET Core
            </summary>
            <param name="tcpKeepAliveInterval">The keep-alive interval in seconds.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetTcpKeepAliveRetryCount(System.Int32)">
            <summary>
            Sets the number of keep-alive probes before timing out the TCP connection.
            Only available on .NET Core
            </summary>
            <param name="tcpKeepAliveRetryCount">The number of keep-alive probes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetNoDelay(System.Boolean)">
            <summary>
            Sets a value indicating whether the Nagle's algorithm is disabled (NoDelay).
            </summary>
            <param name="noDelay">A boolean value indicating whether NoDelay is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetReuseAddress(System.Boolean)">
            <summary>
            Sets a value indicating whether the address can be reused.
            </summary>
            <param name="reuseAddress">A boolean value indicating whether the address can be reused.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetExclusiveAddressUse(System.Boolean)">
            <summary>
            Sets a value indicating whether the socket will have exclusive access to the address.
            </summary>
            <param name="exclusiveAddressUse">A boolean value indicating whether exclusive access is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetReceiveBufferLimit(System.Int32)">
            <summary>
            Sets the limit for the receive buffer size in bytes.
            </summary>
            <param name="receiveBufferLimit">The receive buffer size limit in bytes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetReceiveBufferCapacity(System.Int32)">
            <summary>
            Sets the capacity of the receive buffer in bytes.
            </summary>
            <param name="receiveBufferCapacity">The receive buffer capacity in bytes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetSendBufferLimit(System.Int32)">
            <summary>
            Sets the limit for the send buffer size in bytes.
            </summary>
            <param name="sendBufferLimit">The send buffer size limit in bytes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.SetSendBufferCapacity(System.Int32)">
            <summary>
            Sets the capacity of the send buffer in bytes.
            </summary>
            <param name="sendBufferCapacity">The send buffer capacity in bytes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.SessionConfigSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings">
            <summary>
            Represents the UDP session configuration settings, including dual-mode,
            address reuse, exclusive address use, and buffer limits and capacities.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.DualMode">
            <summary>
            Gets a value indicating whether dual-mode sockets are enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.ReuseAddress">
            <summary>
            Gets a value indicating whether the address can be reused.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.ExclusiveAddressUse">
            <summary>
            Gets a value indicating whether the socket will have exclusive access to the address.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.ReceiveBufferLimit">
            <summary>
            Gets the limit for the receive buffer size in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.ReceiveBufferCapacity">
            <summary>
            Gets the capacity of the receive buffer in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.SendBufferLimit">
            <summary>
            Gets the limit for the send buffer size in bytes.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the UDP session settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.DualMode">
            <summary>
            Gets or sets a value indicating whether dual-mode sockets are enabled.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.ReuseAddress">
            <summary>
            Gets or sets a value indicating whether the address can be reused.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.ExclusiveAddressUse">
            <summary>
            Gets or sets a value indicating whether the socket will have exclusive access to the address.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.ReceiveBufferLimit">
            <summary>
            Gets or sets the limit for the receive buffer size in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.ReceiveBufferCapacity">
            <summary>
            Gets or sets the capacity of the receive buffer in bytes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.SendBufferLimit">
            <summary>
            Gets or sets the limit for the send buffer size in bytes.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.SetDualMode(System.Boolean)">
            <summary>
            Sets a value indicating whether dual-mode sockets are enabled.
            </summary>
            <param name="dualMode">A boolean value indicating whether dual-mode sockets are enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.SetReuseAddress(System.Boolean)">
            <summary>
            Sets a value indicating whether the address can be reused.
            </summary>
            <param name="reuseAddress">A boolean value indicating whether the address can be reused.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.SetExclusiveAddressUse(System.Boolean)">
            <summary>
            Sets a value indicating whether the socket will have exclusive access to the address.
            </summary>
            <param name="exclusiveAddressUse">A boolean value indicating whether exclusive access is enabled.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.SetReceiveBufferLimit(System.Int32)">
            <summary>
            Sets the limit for the receive buffer size in bytes.
            </summary>
            <param name="receiveBufferLimit">The receive buffer size limit in bytes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.SetReceiveBufferCapacity(System.Int32)">
            <summary>
            Sets the capacity of the receive buffer in bytes.
            </summary>
            <param name="receiveBufferCapacity">The receive buffer capacity in bytes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.SetSendBufferLimit(System.Int32)">
            <summary>
            Sets the limit for the send buffer size in bytes.
            </summary>
            <param name="sendBufferLimit">The send buffer size limit in bytes.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.UdpSessionConfigSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings">
            <summary>
            Represents the startup configuration settings, including session limits,
            timeout settings, and server configurations for TCP, UDP, and WebSocket.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Name">
            <summary>
            Gets the name of the startup configuration.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.MaxSession">
            <summary>
            Gets the maximum number of sessions allowed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.MaxPendingRequest">
            <summary>
            Gets the maximum number of pending requests allowed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.MaxSessionPendingRequest">
            <summary>
            Gets the maximum number of pending requests per session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.MaxSessionRequestPerSecond">
            <summary>
            Gets the maximum number of requests per session per second.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.MaxUdpSessionRequestPerUser">
            <summary>
            Gets the maximum number of UDP session requests per user.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.MaxTcpSessionRequestPerUser">
            <summary>
            Gets the maximum number of TCP session requests per user.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.MaxWsSessionRequestPerUser">
            <summary>
            Gets the maximum number of WebSocket session requests per user.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.HandshakeTimeoutInSeconds">
            <summary>
            Gets the handshake timeout in seconds.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.IdleTimeoutInSeconds">
            <summary>
            Gets the idle timeout in seconds.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.TcpServer">
            <summary>
            Gets the TCP server configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.UdpServer">
            <summary>
            Gets the UDP server configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.WebSocketServer">
            <summary>
            Gets the WebSocket server configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.ThreadPoolSize">
            <summary>
            Gets the thread pool size configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.AuthToken">
            <summary>
            Gets the auth token settings.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.#ctor(XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings"/> class using the specified builder.
            </summary>
            <param name="builder">The builder used to configure the startup settings.</param>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.NewBuilder">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/> class for constructing 
            <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings"/> instances.
            </summary>
            <returns>A new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/> class.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder">
            <summary>
            Builder class for constructing instances of <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings"/>.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.Name">
            <summary>
            Gets or sets the name of the startup configuration.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.MaxSession">
            <summary>
            Gets or sets the maximum number of sessions allowed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.MaxPendingRequest">
            <summary>
            Gets or sets the maximum number of pending requests allowed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.MaxSessionPendingRequest">
            <summary>
            Gets or sets the maximum number of pending requests per session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.MaxSessionRequestPerSecond">
            <summary>
            Gets or sets the maximum number of requests per session per second.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.MaxUdpSessionRequestPerUser">
            <summary>
            Gets or sets the maximum number of UDP session requests per user.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.MaxTcpSessionRequestPerUser">
            <summary>
            Gets or sets the maximum number of TCP session requests per user.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.MaxWsSessionRequestPerUser">
            <summary>
            Gets or sets the maximum number of WebSocket session requests per user.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.HandshakeTimeoutInSeconds">
            <summary>
            Gets or sets the handshake timeout in seconds.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.IdleTimeoutInSeconds">
            <summary>
            Gets or sets the idle timeout in seconds.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.TcpServer">
            <summary>
            Gets or sets the TCP server configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.UdpServer">
            <summary>
            Gets or sets the UDP server configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.WebSocketServer">
            <summary>
            Gets or sets the WebSocket server configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.ThreadPoolSize">
            <summary>
            Gets or sets the thread pool size configuration settings.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.AuthToken">
            <summary>
            Gets the auth token settings.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetName(System.String)">
            <summary>
            Sets the name of the startup configuration.
            </summary>
            <param name="name">The name of the startup configuration.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetMaxSession(System.Int32)">
            <summary>
            Sets the maximum number of sessions allowed.
            </summary>
            <param name="maxSession">The maximum number of sessions.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetMaxPendingRequest(System.Int32)">
            <summary>
            Sets the maximum number of pending requests allowed.
            </summary>
            <param name="maxPendingRequest">The maximum number of pending requests.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetMaxSessionPendingRequest(System.Int32)">
            <summary>
            Sets the maximum number of pending requests per session.
            </summary>
            <param name="maxSessionPendingRequest">The maximum number of pending requests per session.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetMaxSessionRequestPerSecond(System.Int32)">
            <summary>
            Sets the maximum number of requests per session per second.
            </summary>
            <param name="maxSessionRequestPerSecond">The maximum number of requests per session per second.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetMaxUdpSessionRequestPerUser(System.Int32)">
            <summary>
            Sets the maximum number of UDP session requests per user.
            </summary>
            <param name="maxUdpSessionRequestPerUser">The maximum number of UDP session requests per user.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetMaxTcpSessionRequestPerUser(System.Int32)">
            <summary>
            Sets the maximum number of TCP session requests per user.
            </summary>
            <param name="maxTcpSessionRequestPerUser">The maximum number of TCP session requests per user.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetMaxWsSessionRequestPerUser(System.Int32)">
            <summary>
            Sets the maximum number of WebSocket session requests per user.
            </summary>
            <param name="maxWsSessionRequestPerUser">The maximum number of WebSocket session requests per user.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetHandshakeTimeoutInSeconds(System.Int32)">
            <summary>
            Sets the handshake timeout in seconds.
            </summary>
            <param name="handshakeTimeoutInSeconds">The handshake timeout in seconds.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetIdleTimeoutInSeconds(System.Int32)">
            <summary>
            Sets the idle timeout in seconds.
            </summary>
            <param name="idleTimeoutInSeconds">The idle timeout in seconds.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetTcpServer(XmobiTea.ProtonNet.Server.Socket.TcpServerSettings)">
            <summary>
            Sets the TCP server configuration settings.
            </summary>
            <param name="tcpServer">The TCP server configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetUdpServer(XmobiTea.ProtonNet.Server.Socket.UdpServerSettings)">
            <summary>
            Sets the UDP server configuration settings.
            </summary>
            <param name="udpServer">The UDP server configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetWebSocketServer(XmobiTea.ProtonNet.Server.Socket.WebSocketServerSettings)">
            <summary>
            Sets the WebSocket server configuration settings.
            </summary>
            <param name="webSocketServer">The WebSocket server configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetThreadPoolSize(XmobiTea.ProtonNet.Server.Socket.ThreadPoolSizeSettings)">
            <summary>
            Sets the thread pool size configuration settings.
            </summary>
            <param name="threadPoolSize">The thread pool size configuration settings.</param>
            <returns>The current instance of the <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.SetAuthToken(XmobiTea.ProtonNet.Server.Socket.AuthTokenSettings)">
            <summary>
            Sets the auth token settings.
            </summary>
            <param name="authToken">The auth token settings.</param>
            <returns>The current <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNet.Server.Socket.StartupSettings.Builder.Build">
            <summary>
            Builds an instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings"/> using the configured settings.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNet.Server.Socket.StartupSettings"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol">
            <summary>
            Defines the various transport protocols supported by the socket server.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol.Udp">
            <summary>
            Represents the UDP (User Datagram Protocol) transport protocol.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol.Tcp">
            <summary>
            Represents the TCP (Transmission Control Protocol) transport protocol.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol.Ssl">
            <summary>
            Represents the SSL (Secure Sockets Layer) transport protocol over TCP.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol.Ws">
            <summary>
            Represents the WebSocket (WS) transport protocol.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNet.Server.Socket.Types.TransportProtocol.Wss">
            <summary>
            Represents the WebSocket Secure (WSS) transport protocol over SSL.
            </summary>
        </member>
    </members>
</doc>

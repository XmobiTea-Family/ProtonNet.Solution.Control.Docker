<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XmobiTea.ProtonNetServer</name>
    </assembly>
    <members>
        <member name="T:XmobiTea.ProtonNetServer.IHttpServer">
            <summary>
            Represents an interface for an HTTP server, inheriting from the IServer interface.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.HttpServer">
            <summary>
            Represents an HTTP server, inheriting from the TcpServer class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.HttpServer"/> class.
            </summary>
            <param name="address">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="options">The TCP server options.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpServer.CreateSession">
            <summary>
            Creates a new HTTP session.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNetServer.HttpSession"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.HttpsServer">
            <summary>
            Represents an HTTPS server, inheriting from the SslServer class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions,XmobiTea.ProtonNetCommon.SslOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.HttpsServer"/> class.
            </summary>
            <param name="address">The IP address of the server.</param>
            <param name="port">The port number of the server.</param>
            <param name="options">The TCP server options.</param>
            <param name="sslOptions">The Ssl options for secure communication.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsServer.CreateSession">
            <summary>
            Creates a new HTTPS session.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNetServer.HttpsSession"/>.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.IHttpSession">
            <summary>
            Represents an interface for an HTTP session, inheriting from the ISession interface.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IHttpSession.SendResponse(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends an HTTP response synchronously.
            </summary>
            <param name="response">The HTTP response to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IHttpSession.SendResponseAsync(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends an HTTP response asynchronously.
            </summary>
            <param name="response">The HTTP response to send.</param>
            <returns>True if the response was sent successfully; otherwise, false.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.HttpSession">
            <summary>
            Represents an HTTP session, inheriting from the TcpSession class.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.HttpSession.Request">
            <summary>
            Gets the current HTTP request being processed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.HttpSession.Response">
            <summary>
            Gets the current HTTP response being processed.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.#ctor(XmobiTea.ProtonNetServer.HttpServer)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.HttpSession"/> class.
            </summary>
            <param name="server">The HTTP server that manages this session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.SendResponse(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends an HTTP response synchronously.
            </summary>
            <param name="response">The HTTP response to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.SendResponseAsync(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends an HTTP response asynchronously.
            </summary>
            <param name="response">The HTTP response to send.</param>
            <returns>True if the response was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles the data received from the client.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data in the buffer.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.OnDisconnected">
            <summary>
            Handles the session disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.OnReceivedRequestHeader(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the request header is received.
            </summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.OnReceivedRequest(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the full request is received.
            </summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.OnReceivedRequestError(XmobiTea.ProtonNetCommon.HttpRequest,System.String)">
            <summary>
            Called when an error occurs while processing the request.
            </summary>
            <param name="request">The HTTP request.</param>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpSession.OnReceivedRequestInternal(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Internal method to process the received request.
            </summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.HttpsSession">
            <summary>
            Represents an HTTPS session, inheriting from the SslSession class.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.HttpsSession.Request">
            <summary>
            Gets the current HTTP request being processed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.HttpsSession.Response">
            <summary>
            Gets the current HTTP response being processed.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.#ctor(XmobiTea.ProtonNetServer.HttpsServer)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.HttpsSession"/> class.
            </summary>
            <param name="server">The HTTPS server that manages this session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.SendResponse(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends an HTTP response synchronously.
            </summary>
            <param name="response">The HTTP response to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.SendResponseAsync(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends an HTTP response asynchronously.
            </summary>
            <param name="response">The HTTP response to send.</param>
            <returns>True if the response was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handles the data received from the client.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data in the buffer.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.OnDisconnected">
            <summary>
            Handles the session disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.OnReceivedRequestHeader(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the request header is received.
            </summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.OnReceivedRequest(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the full request is received.
            </summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.OnReceivedRequestError(XmobiTea.ProtonNetCommon.HttpRequest,System.String)">
            <summary>
            Called when an error occurs while processing the request.
            </summary>
            <param name="request">The HTTP request.</param>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.HttpsSession.OnReceivedRequestInternal(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Internal method to process the received request.
            </summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.IServer">
            <summary>
            Represents the interface for a server, providing methods for starting, stopping,
            and managing connections and data broadcasts.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.Start">
            <summary>
            Starts the server.
            </summary>
            <returns>True if the server started successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.Stop">
            <summary>
            Stops the server.
            </summary>
            <returns>True if the server stopped successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.Restart">
            <summary>
            Restarts the server.
            </summary>
            <returns>True if the server restarted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.BroadcastAll(System.Byte[])">
            <summary>
            Broadcasts a message to all connected clients.
            </summary>
            <param name="buffer">The message buffer to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.BroadcastAll(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message to all connected clients with a specified position and length.
            </summary>
            <param name="buffer">The message buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.BroadcastAllAsync(System.Byte[])">
            <summary>
            Broadcasts a message asynchronously to all connected clients.
            </summary>
            <param name="buffer">The message buffer to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.BroadcastAllAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message asynchronously to all connected clients with a specified position and length.
            </summary>
            <param name="buffer">The message buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.DisconnectAll">
            <summary>
            Disconnects all connected clients.
            </summary>
            <returns>True if all clients were disconnected successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IServer.GetNetworkStatistics">
            <summary>
            Gets the network statistics for the server.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.IServerNetworkStatistics"/> representing the network statistics.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.ISession">
            <summary>
            Represents the interface for a session, providing methods for managing the connection,
            sending data, and retrieving network statistics.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.ISession.Disconnect">
            <summary>
            Disconnects the session.
            </summary>
            <returns>True if the session was disconnected successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.ISession.Send(System.Byte[])">
            <summary>
            Sends data synchronously to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.ISession.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends data synchronously to the connected client with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.ISession.SendAsync(System.Byte[])">
            <summary>
            Sends data asynchronously to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the data was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.ISession.SendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends data asynchronously to the connected client with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the data was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.ISession.GetNetworkStatistics">
            <summary>
            Gets the network statistics for the session.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.INetworkStatistics"/> representing the network statistics.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.ITcpServer">
            <summary>
            Represents the interface for a TCP server.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.TcpServer">
            <summary>
            Represents a TCP server that can handle multiple client sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.Id">
            <summary>
            Gets the unique identifier for the server instance.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.Address">
            <summary>
            Gets the server's IP address.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.Port">
            <summary>
            Gets the server's port number.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.EndPoint">
            <summary>
            Gets the server's endpoint.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.Sessions">
            <summary>
            Gets the collection of active sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.ConnectedSessions">
            <summary>
            Gets the number of connected sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.Options">
            <summary>
            Gets the TCP server options.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.IsStarted">
            <summary>
            Gets a value indicating whether the server is started.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.IsAccepting">
            <summary>
            Gets a value indicating whether the server is currently accepting connections.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.IsDisposed">
            <summary>
            Gets a value indicating whether the server is disposed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpServer.IsSocketDisposed">
            <summary>
            Gets a value indicating whether the server socket is disposed.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.TcpServer"/> class with the specified address, port, and options.
            </summary>
            <param name="address">The server's IP address.</param>
            <param name="port">The server's port number.</param>
            <param name="options">The TCP server options.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.CreateRandomId">
            <summary>
            Creates a random identifier for the server.
            </summary>
            <returns>A random string identifier.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.Start">
            <summary>
            Starts the TCP server.
            </summary>
            <returns>True if the server started successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.Stop">
            <summary>
            Stops the TCP server.
            </summary>
            <returns>True if the server stopped successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.Restart">
            <summary>
            Restarts the TCP server.
            </summary>
            <returns>True if the server restarted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.BroadcastAll(System.Byte[])">
            <summary>
            Broadcasts a message to all connected sessions.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.BroadcastAll(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message to all connected sessions with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.BroadcastAllAsync(System.Byte[])">
            <summary>
            Broadcasts a message asynchronously to all connected sessions.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.BroadcastAllAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message asynchronously to all connected sessions with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.DisconnectAll">
            <summary>
            Disconnects all connected sessions.
            </summary>
            <returns>True if all sessions were disconnected successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.GetNetworkStatistics">
            <summary>
            Gets the network statistics for the server.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.IServerNetworkStatistics"/> representing the network statistics.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.GetSession(System.String)">
            <summary>
            Finds a session by its identifier.
            </summary>
            <param name="id">The session identifier.</param>
            <returns>The <see cref="T:XmobiTea.ProtonNetServer.TcpSession"/> if found; otherwise, null.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.MapSession(System.String,XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Maps a session with the specified identifier to the current TCP server instance.
            </summary>
            <param name="id">The identifier of the session to be mapped.</param>
            <param name="session">The TCP session to be mapped.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.RemoveSession(System.String)">
            <summary>
            Removes a session with the specified identifier from the current TCP server instance.
            </summary>
            <param name="id">The identifier of the session to be removed.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.StartAcceptInternal(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Starts an asynchronous accept operation for incoming connections.
            </summary>
            <param name="e">The SocketAsyncEventArgs object representing the asynchronous operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.ProcessAcceptInternal(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Processes the result of an asynchronous accept operation.
            </summary>
            <param name="e">The SocketAsyncEventArgs object representing the completed operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnAsyncCompletedInternal(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Handles the completion of an asynchronous socket operation.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The SocketAsyncEventArgs object representing the completed operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.CreateSession">
            <summary>
            Creates a new session. Override this method to provide custom session behavior.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNetServer.TcpSession"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnStarting">
            <summary>
            Called when the server is starting. Override this method to add custom logic during server startup.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnStarted">
            <summary>
            Called after the server has started successfully. Override this method to add custom logic after server startup.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnStopping">
            <summary>
            Called when the server is stopping. Override this method to add custom logic during server shutdown.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnStopped">
            <summary>
            Called after the server has stopped successfully. Override this method to add custom logic after server shutdown.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnConnecting(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Called when a session is connecting. Override this method to handle session-specific logic during the connection process.
            </summary>
            <param name="session">The session that is connecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnConnected(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Called after a session has connected successfully. Override this method to handle session-specific logic after the connection process.
            </summary>
            <param name="session">The session that has connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnDisconnecting(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Called when a session is disconnecting. Override this method to handle session-specific logic during the disconnection process.
            </summary>
            <param name="session">The session that is disconnecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnDisconnected(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Called after a session has disconnected successfully. Override this method to handle session-specific logic after the disconnection process.
            </summary>
            <param name="session">The session that has disconnected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Called when a socket error occurs. Override this method to handle errors in a custom way.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnConnectingInternal(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Triggers the OnConnecting method for the specified session.
            </summary>
            <param name="session">The session that is connecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnConnectedInternal(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Triggers the OnConnected method for the specified session.
            </summary>
            <param name="session">The session that has connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnDisconnectingInternal(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Triggers the OnDisconnecting method for the specified session.
            </summary>
            <param name="session">The session that is disconnecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.OnDisconnectedInternal(XmobiTea.ProtonNetServer.TcpSession)">
            <summary>
            Triggers the OnDisconnected method for the specified session.
            </summary>
            <param name="session">The session that has disconnected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.SendErrorInternal(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors by triggering the OnError method.
            Ignores specific disconnect errors based on utility logic.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.Dispose">
            <summary>
            Disposes the server and its resources.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpServer.Dispose(System.Boolean)">
            <summary>
            Disposes the server, optionally releasing managed resources.
            </summary>
            <param name="disposingManagedResources">True to release managed resources; otherwise, false.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.SslServer">
            <summary>
            Represents an SSL server that can handle multiple secure client sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.Id">
            <summary>
            Gets the unique identifier for the server instance.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.SslOptions">
            <summary>
            Gets the Ssl options for secure communication.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.Address">
            <summary>
            Gets the server's IP address.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.Port">
            <summary>
            Gets the server's port number.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.EndPoint">
            <summary>
            Gets the server's endpoint.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.Sessions">
            <summary>
            Gets the collection of active secure sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.ConnectedSessions">
            <summary>
            Gets the number of connected secure sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.Options">
            <summary>
            Gets the TCP server options.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.IsStarted">
            <summary>
            Gets a value indicating whether the server is started.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.IsAccepting">
            <summary>
            Gets a value indicating whether the server is currently accepting connections.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.IsDisposed">
            <summary>
            Gets a value indicating whether the server is disposed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslServer.IsSocketDisposed">
            <summary>
            Gets a value indicating whether the server socket is disposed.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions,XmobiTea.ProtonNetCommon.SslOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.SslServer"/> class with the specified address, port, options, and Ssl options.
            </summary>
            <param name="address">The server's IP address.</param>
            <param name="port">The server's port number.</param>
            <param name="options">The TCP server options.</param>
            <param name="sslOptions">The Ssl options for secure communication.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.CreateRandomId">
            <summary>
            Creates a random identifier for the server.
            </summary>
            <returns>A random string identifier.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.Start">
            <summary>
            Starts the SSL server.
            </summary>
            <returns>True if the server started successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.Stop">
            <summary>
            Stops the SSL server.
            </summary>
            <returns>True if the server stopped successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.Restart">
            <summary>
            Restarts the SSL server.
            </summary>
            <returns>True if the server restarted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.BroadcastAll(System.Byte[])">
            <summary>
            Broadcasts a message to all connected secure sessions.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.BroadcastAll(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message to all connected secure sessions with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.BroadcastAllAsync(System.Byte[])">
            <summary>
            Broadcasts a message asynchronously to all connected secure sessions.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.BroadcastAllAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message asynchronously to all connected secure sessions with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcasted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.DisconnectAll">
            <summary>
            Disconnects all connected secure sessions.
            </summary>
            <returns>True if all sessions were disconnected successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.GetNetworkStatistics">
            <summary>
            Gets the network statistics for the server.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.IServerNetworkStatistics"/> representing the network statistics.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.GetSession(System.String)">
            <summary>
            Finds a secure session by its identifier.
            </summary>
            <param name="id">The session identifier.</param>
            <returns>The <see cref="T:XmobiTea.ProtonNetServer.SslSession"/> if found; otherwise, null.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.MapSession(System.String,XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Maps an SSL session with the specified identifier to the current server instance.
            </summary>
            <param name="id">The identifier of the SSL session to be mapped.</param>
            <param name="session">The SSL session to be mapped.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.RemoveSession(System.String)">
            <summary>
            Removes a session from the current SSL server instance.
            </summary>
            <param name="id">The identifier of the session to be removed.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.StartAcceptInternal(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Starts an asynchronous accept operation for incoming connections.
            </summary>
            <param name="e">The SocketAsyncEventArgs object representing the asynchronous operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.ProcessAcceptInternal(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Processes the result of an asynchronous accept operation.
            </summary>
            <param name="e">The SocketAsyncEventArgs object representing the completed operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnAsyncCompletedInternal(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Handles the completion of an asynchronous socket operation.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The SocketAsyncEventArgs object representing the completed operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.CreateSession">
            <summary>
            Creates a new secure session. Override this method to provide custom session behavior.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNetServer.SslSession"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnStarting">
            <summary>
            Called when the server is starting. Override this method to add custom logic during server startup.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnStarted">
            <summary>
            Called after the server has started successfully. Override this method to add custom logic after server startup.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnStopping">
            <summary>
            Called when the server is stopping. Override this method to add custom logic during server shutdown.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnStopped">
            <summary>
            Called after the server has stopped successfully. Override this method to add custom logic after server shutdown.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnConnecting(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Called when a session is connecting. Override this method to handle session-specific logic during the connection process.
            </summary>
            <param name="session">The session that is connecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnConnected(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Called after a session has connected successfully. Override this method to handle session-specific logic after the connection process.
            </summary>
            <param name="session">The session that has connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnHandshaking(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Called when a session is undergoing the SSL/TLS handshake process. Override this method to handle session-specific logic during the handshake process.
            </summary>
            <param name="session">The session that is handshaking.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnHandshaked(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Called after a session has successfully completed the SSL/TLS handshake. Override this method to handle session-specific logic after the handshake process.
            </summary>
            <param name="session">The session that has completed the handshake.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnDisconnecting(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Called when a session is disconnecting. Override this method to handle session-specific logic during the disconnection process.
            </summary>
            <param name="session">The session that is disconnecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnDisconnected(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Called after a session has disconnected successfully. Override this method to handle session-specific logic after the disconnection process.
            </summary>
            <param name="session">The session that has disconnected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Called when a socket error occurs. Override this method to handle errors in a custom way.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnConnectingInternal(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Triggers the OnConnecting method for the specified session.
            </summary>
            <param name="session">The session that is connecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnConnectedInternal(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Triggers the OnConnected method for the specified session.
            </summary>
            <param name="session">The session that has connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnHandshakingInternal(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Triggers the OnHandshaking method for the specified session.
            </summary>
            <param name="session">The session that is handshaking.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnHandshakedInternal(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Triggers the OnHandshaked method for the specified session.
            </summary>
            <param name="session">The session that has completed the handshake.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnDisconnectingInternal(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Triggers the OnDisconnecting method for the specified session.
            </summary>
            <param name="session">The session that is disconnecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.OnDisconnectedInternal(XmobiTea.ProtonNetServer.SslSession)">
            <summary>
            Triggers the OnDisconnected method for the specified session.
            </summary>
            <param name="session">The session that has disconnected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.SendErrorInternal(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors by triggering the OnError method.
            Ignores specific disconnect errors based on utility logic.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.Dispose">
            <summary>
            Disposes the server and its resources.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslServer.Dispose(System.Boolean)">
            <summary>
            Disposes the server, optionally releasing managed resources.
            </summary>
            <param name="disposingManagedResources">True to release managed resources; otherwise, false.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.ITcpSession">
            <summary>
            Represents an interface for TCP session operations.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.TcpSession">
            <summary>
            Provides the implementation for a TCP session, handling connection, data transmission, and disconnection.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.Id">
            <summary>
            Gets the unique identifier for this session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.Server">
            <summary>
            Gets the server that owns this session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.Socket">
            <summary>
            Gets the socket associated with this session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.IsConnected">
            <summary>
            Gets a value indicating whether the session is currently connected.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.IsDisposed">
            <summary>
            Gets a value indicating whether the session has been disposed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.IsSocketDisposed">
            <summary>
            Gets a value indicating whether the socket has been disposed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.Options">
            <summary>
            Gets the options for the TCP server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.sendLock">
            <summary>
            An object used to synchronize access to the send buffer.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.receiveBuffer">
            <summary>
            The buffer used to store received data.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNetServer.TcpSession.sendBuffer">
            <summary>
            The buffer used to store data to be sent.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNetServer.TcpSession.sendBufferFlush">
            <summary>
            The buffer used to temporarily store data during the flushing process.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.sendBufferFlushOffset">
            <summary>
            The offset position in the send buffer during the flush process.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.receiving">
            <summary>
            Indicates whether data is currently being received.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.receiveEventArg">
            <summary>
            The event argument used for asynchronous receive operations.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.sending">
            <summary>
            Indicates whether data is currently being sent.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.TcpSession.sendEventArg">
            <summary>
            The event argument used for asynchronous send operations.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.#ctor(XmobiTea.ProtonNetServer.TcpServer)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.TcpSession"/> class.
            </summary>
            <param name="server">The server that owns this session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.GetNetworkStatistics">
            <summary>
            Gets the network statistics for this session.
            </summary>
            <returns>The network statistics.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.ConnectInternal(System.Net.Sockets.Socket)">
            <summary>
            Internal method to establish a connection using the provided socket.
            </summary>
            <param name="socket">The socket to connect with.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.Disconnect">
            <summary>
            Disconnects the session.
            </summary>
            <returns>True if the session was disconnected successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.Send(System.Byte[])">
            <summary>
            Sends data synchronously.
            </summary>
            <param name="buffer">The buffer containing the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends data synchronously with the specified position and length.
            </summary>
            <param name="buffer">The buffer containing the data to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.SendAsync(System.Byte[])">
            <summary>
            Sends data asynchronously.
            </summary>
            <param name="buffer">The buffer containing the data to send.</param>
            <returns>True if the data was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.SendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends data asynchronously with the specified position and length.
            </summary>
            <param name="buffer">The buffer containing the data to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the data was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.TryReceive">
            <summary>
            Attempts to receive data asynchronously. 
            If already receiving or not connected, the method exits early.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.TrySend">
            <summary>
            Attempts to send data asynchronously. 
            If already sending or not connected, the method exits early.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.ClearBuffers">
            <summary>
            Clears the send buffers and resets network statistics related to sending.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnAsyncCompleted(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Handles the completion of an asynchronous socket operation, 
            determining whether to continue receiving or sending data based on the last operation.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments containing details of the completed operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.ProcessReceive(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Processes the data received from a socket operation, updating network statistics 
            and checking for errors or buffer limitations.
            </summary>
            <param name="e">The event arguments containing details of the completed operation.</param>
            <returns>Returns true if more data needs to be received, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.ProcessSend(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Processes the data sent from a socket operation, updating network statistics 
            and checking for errors or if more data needs to be sent.
            </summary>
            <param name="e">The event arguments containing details of the completed operation.</param>
            <returns>Returns true if more data needs to be sent, otherwise false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnConnecting">
            <summary>
            Invoked when the session is in the process of connecting.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnConnected">
            <summary>
            Invoked when the session has successfully connected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnDisconnecting">
            <summary>
            Invoked when the session is in the process of disconnecting.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnDisconnected">
            <summary>
            Invoked when the session has successfully disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Invoked when data is received from the remote endpoint.
            </summary>
            <param name="buffer">The buffer containing the received data.</param>
            <param name="position">The position in the buffer where the received data starts.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnSent(System.Int32,System.Int32)">
            <summary>
            Invoked when data is successfully sent to the remote endpoint.
            </summary>
            <param name="sent">The number of bytes sent.</param>
            <param name="pending">The number of bytes pending in the send buffer.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnEmpty">
            <summary>
            Invoked when the send buffer is empty.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Invoked when an error occurs during the session operation.
            </summary>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.SendErrorInternal(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors by invoking the error handling method, unless the error is one that should be ignored.
            </summary>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:XmobiTea.ProtonNetServer.TcpSession"/> class.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.TcpSession.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:XmobiTea.ProtonNetServer.TcpSession"/> and optionally releases the managed resources.
            </summary>
            <param name="disposingManagedResources">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.SslSession">
            <summary>
            Represents a secure SSL session with the ability to manage connection,
            data transmission, and handshake processes.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.IsHandshaked">
            <summary>
            Gets a value indicating whether the session has completed the SSL handshake.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.Id">
            <summary>
            Gets the unique identifier for this session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.Server">
            <summary>
            Gets the associated server instance for this session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.Socket">
            <summary>
            Gets the underlying socket for the session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.IsConnected">
            <summary>
            Gets a value indicating whether the session is currently connected.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.IsDisposed">
            <summary>
            Indicates whether this session has been disposed.
            This flag helps ensure that resources are not accessed after disposal.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.IsSocketDisposed">
            <summary>
            Indicates whether the underlying socket has been disposed.
            This flag is important for preventing operations on a closed socket.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.networkStatistics">
            <summary>
            Manages the statistics related to network performance for this session.
            Includes tracking bytes sent/received, packets sent/received, etc.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.Options">
            <summary>
            Contains various configuration options for the TCP server.
            This includes settings like buffer sizes, keep-alive time, and more.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.sendLock">
            <summary>
            Object used for synchronizing access to the send buffer.
            Ensures thread safety during send operations.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.receiveBuffer">
            <summary>
            Buffer for storing received data before it is processed.
            The buffer size is determined by the options provided.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNetServer.SslSession.sendBuffer">
            <summary>
            Buffer for storing data that is to be sent.
            This buffer accumulates data until it can be flushed out.
            </summary>
        </member>
        <member name="F:XmobiTea.ProtonNetServer.SslSession.sendBufferFlush">
            <summary>
            Buffer for storing data that is currently being flushed out.
            This buffer is swapped with the send buffer during send operations.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.receiving">
            <summary>
            Flag indicating whether a receive operation is currently in progress.
            Used to prevent overlapping receive operations.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.sending">
            <summary>
            Flag indicating whether a send operation is currently in progress.
            Used to prevent overlapping send operations.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.SslSession.sendBufferFlushOffset">
            <summary>
            Offset for tracking the current position within the send buffer during a flush.
            This helps manage partial sends.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.#ctor(XmobiTea.ProtonNetServer.SslServer)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.SslSession"/> class.
            </summary>
            <param name="server">The SSL server associated with this session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.GetNetworkStatistics">
            <summary>
            Gets the network statistics for this session.
            </summary>
            <returns>The network statistics object.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.SetSocketOption">
            <summary>
            Configures the socket options based on the current server settings.
            This includes enabling keep-alive, setting TCP keep-alive parameters, and disabling Nagle's algorithm if specified.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.ReserveBuffer">
            <summary>
            Reserves the necessary buffer sizes for receiving and sending data.
            This is based on the configuration options provided by the server.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.ConnectInternal(System.Net.Sockets.Socket)">
            <summary>
            Initializes the session with a given socket, setting up the SSL stream and starting the handshake process.
            This method also prepares the buffers and resets the network statistics.
            </summary>
            <param name="socket">The socket to associate with this session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.Disconnect">
            <summary>
            Disconnects the session, releasing all resources and closing the connection.
            </summary>
            <returns>True if disconnection was successful; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.Send(System.Byte[])">
            <summary>
            Sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The position in the buffer at which to start sending data.</param>
            <param name="length">The number of bytes to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.SendAsync(System.Byte[])">
            <summary>
            Asynchronously sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the send operation is successfully initiated; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.SendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends data to the connected client.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The position in the buffer at which to start sending data.</param>
            <param name="length">The number of bytes to send.</param>
            <returns>True if the send operation is successfully initiated; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.TryReceive">
            <summary>
            Attempts to receive data asynchronously from the SSL stream.
            This method ensures that only one receive operation is active at a time.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.TrySend">
            <summary>
            Attempts to send data asynchronously using the SSL stream.
            This method ensures that only one send operation is active at a time.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.ClearBuffers">
            <summary>
            Clears the buffers used for sending data, resetting all pending data.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.ProcessHandshake(System.IAsyncResult)">
            <summary>
            Processes the result of the SSL handshake operation, finalizing the handshake
            and triggering the appropriate events.
            </summary>
            <param name="result">The asynchronous result of the handshake operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.ProcessReceive(System.IAsyncResult)">
            <summary>
            Processes the result of a data receive operation from the SSL stream.
            This method handles the received data and triggers the appropriate events.
            </summary>
            <param name="result">The asynchronous result of the receive operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.ProcessSend(System.IAsyncResult)">
            <summary>
            Processes the result of a data send operation through the SSL stream.
            This method handles the completion of the send operation and triggers the appropriate events.
            </summary>
            <param name="result">The asynchronous result of the send operation.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnConnecting">
            <summary>
            Event triggered when the session is connecting.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnConnected">
            <summary>
            Event triggered when the session is connected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnHandshaking">
            <summary>
            Event triggered when the SSL handshake process begins.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnHandshaked">
            <summary>
            Event triggered when the SSL handshake process is completed.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnDisconnecting">
            <summary>
            Event triggered when the session is disconnecting.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnDisconnected">
            <summary>
            Event triggered when the session is disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Event triggered when data is received from the client.
            </summary>
            <param name="buffer">The buffer containing the received data.</param>
            <param name="position">The position in the buffer where the data starts.</param>
            <param name="length">The number of bytes received.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnSent(System.Int32,System.Int32)">
            <summary>
            Event triggered when data is sent to the client.
            </summary>
            <param name="sent">The number of bytes sent.</param>
            <param name="pending">The number of bytes pending to be sent.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnEmpty">
            <summary>
            Event triggered when the send buffer is empty.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Event triggered when an error occurs in the session.
            </summary>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.SendErrorInternal(System.Net.Sockets.SocketError)">
            <summary>
            Handles socket errors by invoking the error handling method, unless the error is one that should be ignored.
            </summary>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:XmobiTea.ProtonNetServer.SslSession"/>.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.SslSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and, optionally, managed resources.
            </summary>
            <param name="disposingManagedResources">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.IUdpServer">
            <summary>
            Defines the interface for a UDP server, extending the basic server functionalities.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IUdpServer.Start(System.String,System.Int32)">
            <summary>
            Starts the UDP server with the specified multicast address and port.
            </summary>
            <param name="multicastAddress">The multicast address to join.</param>
            <param name="multicastPort">The multicast port to use.</param>
            <returns>True if the server started successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IUdpServer.Send(System.Net.EndPoint,System.Byte[])">
            <summary>
            Sends a datagram to the specified endpoint.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IUdpServer.Send(System.Net.EndPoint,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a datagram to the specified endpoint with the given position and length.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IUdpServer.SendAsync(System.Net.EndPoint,System.Byte[])">
            <summary>
            Asynchronously sends a datagram to the specified endpoint.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the data was successfully queued for sending; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IUdpServer.SendAsync(System.Net.EndPoint,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends a datagram to the specified endpoint with the given position and length.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the data was successfully queued for sending; otherwise, false.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.UdpServer">
            <summary>
            Represents a UDP server that provides functionalities for managing UDP connections and data transmission.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.Id">
            <summary>
            Gets the unique identifier of the server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.Address">
            <summary>
            Gets the IP address of the server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.Port">
            <summary>
            Gets the port number on which the server is listening.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.EndPoint">
            <summary>
            Gets the server's local endpoint.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.MulticastEndpoint">
            <summary>
            Gets the multicast endpoint used by the server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.Sessions">
            <summary>
            Gets the collection of active UDP sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.EndPointWithSocketSessionDict">
            <summary>
            Gets the dictionary that maps endpoints to UDP sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.ConnectedSessions">
            <summary>
            Gets the number of connected sessions.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.handlerSocket">
            <summary>
            Socket handler for managing the server's network communication.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.receiveBuffer">
            <summary>
            Buffer for storing received data before processing.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.sendBuffer">
            <summary>
            Buffer for storing data to be sent.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.receiveEndPoint">
            <summary>
            Endpoint for receiving data from clients.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.sendEndPoint">
            <summary>
            Endpoint for sending data to clients.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.receiving">
            <summary>
            Flag indicating whether the server is currently receiving data.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.receiveEventArg">
            <summary>
            Event arguments for handling asynchronous receive operations.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.sending">
            <summary>
            Flag indicating whether the server is currently sending data.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.sendEventArg">
            <summary>
            Event arguments for handling asynchronous send operations.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.networkStatistics">
            <summary>
            Internal statistics for tracking the server's network performance.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.Options">
            <summary>
            Gets the options used by the UDP server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.IsStarted">
            <summary>
            Gets a value indicating whether the server has been started.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.IsDisposed">
            <summary>
            Gets a value indicating whether the server has been disposed.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpServer.IsSocketDisposed">
            <summary>
            Gets a value indicating whether the server's socket has been disposed.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.UdpServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.UdpServer"/> class with the specified address, port, and options.
            </summary>
            <param name="address">The IP address of the server.</param>
            <param name="port">The port number on which the server listens.</param>
            <param name="options">The options used by the server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.CreateRandomId">
            <summary>
            Generates a random identifier string.
            </summary>
            <returns>A randomly generated string.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Start(System.String,System.Int32)">
            <summary>
            Starts the UDP server with the specified multicast address and port.
            </summary>
            <param name="multicastAddress">The multicast address to join.</param>
            <param name="multicastPort">The multicast port to use.</param>
            <returns>True if the server started successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Start">
            <summary>
            Starts the UDP server.
            </summary>
            <returns>True if the server started successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Stop">
            <summary>
            Stops the UDP server.
            </summary>
            <returns>True if the server stopped successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Restart">
            <summary>
            Restarts the UDP server.
            </summary>
            <returns>True if the server restarted successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.BroadcastAll(System.Byte[])">
            <summary>
            Broadcasts a message to all clients using the specified buffer.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <returns>True if the broadcast was successful; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.BroadcastAll(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message to all clients using the specified buffer, position, and length.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the broadcast was successful; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.BroadcastAllAsync(System.Byte[])">
            <summary>
            Broadcasts a message asynchronously to all clients using the specified buffer.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <returns>True if the broadcast was successful; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.BroadcastAllAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message asynchronously to all clients using the specified buffer, position, and length.
            </summary>
            <param name="buffer">The data buffer to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the broadcast was successful; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.DisconnectAll">
            <summary>
            Disconnects all connected sessions.
            </summary>
            <returns>True if all sessions were disconnected successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.GetNetworkStatistics">
            <summary>
            Retrieves the server's network statistics.
            </summary>
            <returns>An object that provides network statistics.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.SendAsync(System.Net.EndPoint,System.Byte[])">
            <summary>
            Sends a datagram asynchronously to the specified endpoint using the provided buffer.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the data was successfully queued for sending; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.SendAsync(System.Net.EndPoint,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a datagram asynchronously to the specified endpoint using the provided buffer, position, and length.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the data was successfully queued for sending; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Send(System.Net.EndPoint,System.Byte[])">
            <summary>
            Sends a datagram synchronously to the specified endpoint using the provided buffer.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Send(System.Net.EndPoint,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a datagram synchronously to the specified endpoint using the provided buffer, position, and length.
            </summary>
            <param name="endpoint">The destination endpoint.</param>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.GetSession(System.String)">
            <summary>
            Finds a session by its unique identifier.
            </summary>
            <param name="id">The session identifier.</param>
            <returns>The <see cref="T:XmobiTea.ProtonNetServer.UdpSession"/> associated with the specified identifier, or null if not found.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.GetSession(System.Net.EndPoint)">
            <summary>
            Finds a session by its remote endpoint.
            </summary>
            <param name="endpoint">The remote endpoint.</param>
            <returns>The <see cref="T:XmobiTea.ProtonNetServer.UdpSession"/> associated with the specified endpoint, or null if not found.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.MapSession(System.String,XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Maps a UDP session with the specified identifier to the current server instance.
            </summary>
            <param name="id">The identifier of the UDP session to be mapped.</param>
            <param name="session">The UDP session to be mapped.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.RemoveSession(System.String)">
            <summary>
            Unregisters a session from the server.
            </summary>
            <param name="id">The unique identifier of the session to unregister.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.TryReceive">
            <summary>
            Attempts to receive a datagram.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.TrySend">
            <summary>
            Attempts to send a datagram.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.ClearBuffers">
            <summary>
            Clears the send and receive buffers.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.ProcessReceiveFromInternal(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Processes a completed receive operation.
            </summary>
            <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.ProcessSendToInternal(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Processes a completed send operation.
            </summary>
            <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnAsyncCompletedInternal(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Handles the completion of asynchronous socket operations.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.CreateSession">
            <summary>
            Creates a new instance of the <see cref="T:XmobiTea.ProtonNetServer.UdpSession"/> class.
            </summary>
            <returns>A new <see cref="T:XmobiTea.ProtonNetServer.UdpSession"/> instance.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnStarting">
            <summary>
            Called when the server is starting.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnStarted">
            <summary>
            Called when the server has started.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnStopping">
            <summary>
            Called when the server is stopping.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnStopped">
            <summary>
            Called when the server has stopped.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnConnecting(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Called when a session is connecting.
            </summary>
            <param name="session">The session that is connecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnConnected(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Called when a session has connected.
            </summary>
            <param name="session">The session that has connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnDisconnecting(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Called when a session is disconnecting.
            </summary>
            <param name="session">The session that is disconnecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnDisconnected(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Called when a session has disconnected.
            </summary>
            <param name="session">The session that has disconnected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnReceived(System.Net.EndPoint,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from a remote endpoint.
            </summary>
            <param name="endpoint">The remote endpoint.</param>
            <param name="buffer">The data buffer containing the received data.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnSent(System.Net.EndPoint,System.Int32)">
            <summary>
            Called when data has been sent to a remote endpoint.
            </summary>
            <param name="endpoint">The remote endpoint.</param>
            <param name="sent">The number of bytes sent.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Called when an error occurs during a socket operation.
            </summary>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnConnectingInternal(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Notifies the server that a session is connecting.
            </summary>
            <param name="session">The session that is connecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnConnectedInternal(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Notifies the server that a session has connected.
            </summary>
            <param name="session">The session that has connected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnDisconnectingInternal(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Notifies the server that a session is disconnecting.
            </summary>
            <param name="session">The session that is disconnecting.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.OnDisconnectedInternal(XmobiTea.ProtonNetServer.UdpSession)">
            <summary>
            Notifies the server that a session has disconnected.
            </summary>
            <param name="session">The session that has disconnected.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.SendErrorInternal(System.Net.Sockets.SocketError)">
            <summary>
            Handles a socket error internally and calls the <see cref="M:XmobiTea.ProtonNetServer.UdpServer.OnError(System.Net.Sockets.SocketError)"/> method.
            </summary>
            <param name="error">The socket error that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Dispose">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:XmobiTea.ProtonNetServer.UdpServer"/> and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpServer.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:XmobiTea.ProtonNetServer.UdpServer"/> and optionally releases the managed resources.
            </summary>
            <param name="disposingManagedResources">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.IUdpSession">
            <summary>
            Represents the interface for a UDP session.
            </summary>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.UdpSession">
            <summary>
            Represents a UDP session that handles communication with a remote endpoint.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpSession.Id">
            <summary>
            Gets the unique identifier for the session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpSession.Server">
            <summary>
            Gets the server associated with this session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpSession.RemoteEndPoint">
            <summary>
            Gets the remote endpoint for this session.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpSession.IsConnected">
            <summary>
            Gets a value indicating whether the session is connected.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.UdpSession.IsDisposed">
            <summary>
            Gets a value indicating whether the session is disposed.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.#ctor(XmobiTea.ProtonNetServer.UdpServer)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.UdpSession"/> class with the specified server.
            </summary>
            <param name="server">The server associated with this session.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.CreateRandomId">
            <summary>
            Creates a random identifier for the session.
            </summary>
            <returns>A random string identifier.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.GetNetworkStatistics">
            <summary>
            Gets the network statistics for the session.
            </summary>
            <returns>An instance of <see cref="T:XmobiTea.ProtonNetCommon.INetworkStatistics"/> representing the network statistics.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.Disconnect">
            <summary>
            Disconnects the session.
            </summary>
            <returns>True if the session was disconnected successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.OnConnecting">
            <summary>
            Called when the session is connecting. Override this method to add custom logic during connection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.OnConnected">
            <summary>
            Called after the session has connected successfully. Override this method to add custom logic after connection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.OnDisconnecting">
            <summary>
            Called when the session is disconnecting. Override this method to add custom logic during disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.OnDisconnected">
            <summary>
            Called after the session has disconnected successfully. Override this method to add custom logic after disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from the remote endpoint. Override this method to process received data.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.OnSent(System.Int32)">
            <summary>
            Called after data has been sent to the remote endpoint. Override this method to add custom logic after sending data.
            </summary>
            <param name="sent">The number of bytes sent.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.OnError(System.Net.Sockets.SocketError)">
            <summary>
            Called when a socket error occurs. Override this method to handle errors in a custom way.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.Send(System.Byte[])">
            <summary>
            Sends data synchronously to the remote endpoint.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends data synchronously to the remote endpoint with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.SendAsync(System.Byte[])">
            <summary>
            Sends data asynchronously to the remote endpoint.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <returns>True if the data was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.SendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends data asynchronously to the remote endpoint with a specified position and length.
            </summary>
            <param name="buffer">The data buffer to send.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the data was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.Dispose">
            <summary>
            Disposes the session and its resources.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.UdpSession.Dispose(System.Boolean)">
            <summary>
            Disposes the session, optionally releasing managed resources.
            </summary>
            <param name="disposingManagedResources">True to release managed resources; otherwise, false.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.IWsServer">
            <summary>
            Represents the interface for a WebSocket server, providing methods for broadcasting and closing WebSocket connections.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.CloseAll">
            <summary>
            Closes all WebSocket connections.
            </summary>
            <returns>True if the connections were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.CloseAll(System.Int32)">
            <summary>
            Closes all WebSocket connections with the specified status code.
            </summary>
            <param name="status">The status code to send with the close frame.</param>
            <returns>True if the connections were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.CloseAll(System.Int32,System.Byte[])">
            <summary>
            Closes all WebSocket connections with the specified status code and a buffer.
            </summary>
            <param name="status">The status code to send with the close frame.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <returns>True if the connections were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.CloseAll(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Closes all WebSocket connections with the specified status code and a buffer with a specified position and length.
            </summary>
            <param name="status">The status code to send with the close frame.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the connections were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastText(System.Byte[])">
            <summary>
            Broadcasts a text message to all WebSocket connections.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a text message to all WebSocket connections with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastTextAsync(System.Byte[])">
            <summary>
            Broadcasts a text message asynchronously to all WebSocket connections.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastTextAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a text message asynchronously to all WebSocket connections with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastBinary(System.Byte[])">
            <summary>
            Broadcasts a binary message to all WebSocket connections.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a binary message to all WebSocket connections with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastBinaryAsync(System.Byte[])">
            <summary>
            Broadcasts a binary message asynchronously to all WebSocket connections.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastBinaryAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a binary message asynchronously to all WebSocket connections with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastPing(System.Byte[])">
            <summary>
            Broadcasts a ping message to all WebSocket connections.
            </summary>
            <param name="buffer">The buffer containing the ping message.</param>
            <returns>True if the ping was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a ping message to all WebSocket connections with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the ping was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastPingAsync(System.Byte[])">
            <summary>
            Broadcasts a ping message asynchronously to all WebSocket connections.
            </summary>
            <param name="buffer">The buffer containing the ping message.</param>
            <returns>True if the ping was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsServer.MulticastPingAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a ping message asynchronously to all WebSocket connections with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the ping was sent successfully; otherwise, false.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.WsServer">
            <summary>
            Represents a WebSocket server that inherits from HttpServer and implements WebSocket functionality.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.WsServer.EmptyBytes">
            <summary>
            A static empty bytes
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.WsServer.webSocket">
            <summary>
            The web socket handle
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.WsServer"/> class with the specified address, port, and options.
            </summary>
            <param name="address">The server's IP address.</param>
            <param name="port">The server's port number.</param>
            <param name="options">The TCP server options.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.CreateSession">
            <summary>
            Creates a new WebSocket session.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNetServer.WsSession"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.CloseAll">
            <summary>
            Closes all WebSocket sessions with a default status code of 0.
            </summary>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.CloseAll(System.Int32)">
            <summary>
            Closes all WebSocket sessions with the specified status code.
            </summary>
            <param name="status">The status code to use when closing the sessions.</param>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.CloseAll(System.Int32,System.Byte[])">
            <summary>
            Closes all WebSocket sessions with the specified status code and an additional buffer.
            </summary>
            <param name="status">The status code to use when closing the sessions.</param>
            <param name="buffer">The buffer containing additional data to send before closing the sessions.</param>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.CloseAll(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Closes all WebSocket sessions with the specified status code, buffer, and offset/size parameters.
            </summary>
            <param name="status">The status code to use when closing the sessions.</param>
            <param name="buffer">The buffer containing additional data to send before closing the sessions.</param>
            <param name="offset">The offset in the buffer where the data begins.</param>
            <param name="size">The size of the data to send.</param>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.BroadcastAll(System.Byte[])">
            <summary>
            Broadcasts a message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.BroadcastAll(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.BroadcastAllAsync(System.Byte[])">
            <summary>
            Asynchronously broadcasts a message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.BroadcastAllAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously broadcasts a message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastText(System.Byte[])">
            <summary>
            Sends a text message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastTextAsync(System.Byte[])">
            <summary>
            Asynchronously sends a text message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastTextAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends a text message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastBinary(System.Byte[])">
            <summary>
            Sends a binary message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastBinaryAsync(System.Byte[])">
            <summary>
            Asynchronously sends a binary message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastBinaryAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends a binary message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastPing(System.Byte[])">
            <summary>
            Sends a ping message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastPingAsync(System.Byte[])">
            <summary>
            Asynchronously sends a ping message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.MulticastPingAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends a ping message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is being established.
            Override this method to add custom logic during WebSocket connection.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsConnected(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is successfully established.
            Override this method to add custom logic after WebSocket connection.
            </summary>
            <param name="response">The HTTP response for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest,XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is being established.
            Override this method to add custom logic during WebSocket connection.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
            <param name="response">The HTTP response for the WebSocket connection.</param>
            <returns>True if the connection is allowed; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsConnected(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is successfully established.
            Override this method to add custom logic after WebSocket connection.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsDisconnecting">
            <summary>
            Called when a WebSocket connection is being disconnected.
            Override this method to add custom logic during WebSocket disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsDisconnected">
            <summary>
            Called when a WebSocket connection is successfully disconnected.
            Override this method to add custom logic after WebSocket disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from the WebSocket connection.
            Override this method to process received data.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsClose(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket connection is closed.
            Override this method to handle WebSocket close events.
            </summary>
            <param name="buffer">The close data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the close data.</param>
            <param name="status">The close status code.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket ping is received.
            Override this method to handle WebSocket ping events.
            </summary>
            <param name="buffer">The ping data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the ping data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsPong(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket pong is received.
            Override this method to handle WebSocket pong events.
            </summary>
            <param name="buffer">The pong data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the pong data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsError(System.String)">
            <summary>
            Called when a WebSocket error occurs.
            Override this method to handle WebSocket errors with a custom message.
            </summary>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.OnWsError(System.Net.Sockets.SocketError)">
            <summary>
            Called when a WebSocket error occurs.
            Override this method to handle WebSocket errors with a <see cref="T:System.Net.Sockets.SocketError"/> instance.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsServer.SendUpgrade(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends a WebSocket upgrade response to the client.
            </summary>
            <param name="response">The HTTP response containing the WebSocket upgrade information.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.WssServer">
            <summary>
            Represents a secure WebSocket server that inherits from HttpsServer and implements WebSocket functionality.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.WssServer.EmptyBytes">
            <summary>
            A static empty bytes
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.WssServer.webSocket">
            <summary>
            The web socket handle
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.#ctor(System.String,System.Int32,XmobiTea.ProtonNetServer.Options.TcpServerOptions,XmobiTea.ProtonNetCommon.SslOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.WssServer"/> class with the specified address, port, options, and Ssl options.
            </summary>
            <param name="address">The server's IP address.</param>
            <param name="port">The server's port number.</param>
            <param name="options">The TCP server options.</param>
            <param name="sslOptions">The Ssl options for secure communication.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.CreateSession">
            <summary>
            Creates a new secure WebSocket session.
            </summary>
            <returns>A new instance of <see cref="T:XmobiTea.ProtonNetServer.WssSession"/>.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.CloseAll">
            <summary>
            Closes all WebSocket sessions with a default status code of 0.
            </summary>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.CloseAll(System.Int32)">
            <summary>
            Closes all WebSocket sessions with the specified status code.
            </summary>
            <param name="status">The status code to use when closing the sessions.</param>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.CloseAll(System.Int32,System.Byte[])">
            <summary>
            Closes all WebSocket sessions with the specified status code and an additional buffer.
            </summary>
            <param name="status">The status code to use when closing the sessions.</param>
            <param name="buffer">The buffer containing additional data to send before closing the sessions.</param>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.CloseAll(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Closes all WebSocket sessions with the specified status code, buffer, and position/length parameters.
            </summary>
            <param name="status">The status code to use when closing the sessions.</param>
            <param name="buffer">The buffer containing additional data to send before closing the sessions.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if all sessions were closed successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.BroadcastAll(System.Byte[])">
            <summary>
            Broadcasts a message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.BroadcastAll(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Broadcasts a message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.BroadcastAllAsync(System.Byte[])">
            <summary>
            Asynchronously broadcasts a message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.BroadcastAllAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously broadcasts a message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the message to broadcast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to broadcast.</param>
            <returns>True if the message was broadcast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastText(System.Byte[])">
            <summary>
            Sends a text message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="size">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastTextAsync(System.Byte[])">
            <summary>
            Asynchronously sends a text message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastTextAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends a text message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="size">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastBinary(System.Byte[])">
            <summary>
            Sends a binary message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="size">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastBinaryAsync(System.Byte[])">
            <summary>
            Asynchronously sends a binary message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastBinaryAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends a binary message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="size">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastPing(System.Byte[])">
            <summary>
            Sends a ping message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="size">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastPingAsync(System.Byte[])">
            <summary>
            Asynchronously sends a ping message to all connected WebSocket sessions.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.MulticastPingAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Asynchronously sends a ping message to all connected WebSocket sessions with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping message to multicast.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="size">The length of the data to multicast.</param>
            <returns>True if the message was multicast successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is being established.
            Override this method to add custom logic during WebSocket connection.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsConnected(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is successfully established.
            Override this method to add custom logic after WebSocket connection.
            </summary>
            <param name="response">The HTTP response for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest,XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is being established.
            Override this method to add custom logic during WebSocket connection.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
            <param name="response">The HTTP response for the WebSocket connection.</param>
            <returns>True if the connection is allowed; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsConnected(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is successfully established.
            Override this method to add custom logic after WebSocket connection.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsDisconnecting">
            <summary>
            Called when a WebSocket connection is being disconnected.
            Override this method to add custom logic during WebSocket disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsDisconnected">
            <summary>
            Called when a WebSocket connection is successfully disconnected.
            Override this method to add custom logic after WebSocket disconnection.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from the WebSocket connection.
            Override this method to process received data.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsClose(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket connection is closed.
            Override this method to handle WebSocket close events.
            </summary>
            <param name="buffer">The close data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the close data.</param>
            <param name="status">The close status code.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket ping is received.
            Override this method to handle WebSocket ping events.
            </summary>
            <param name="buffer">The ping data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the ping data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsPong(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket pong is received.
            Override this method to handle WebSocket pong events.
            </summary>
            <param name="buffer">The pong data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the pong data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsError(System.String)">
            <summary>
            Called when a WebSocket error occurs.
            Override this method to handle WebSocket errors with a custom message.
            </summary>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.OnWsError(System.Net.Sockets.SocketError)">
            <summary>
            Called when a WebSocket error occurs.
            Override this method to handle WebSocket errors with a <see cref="T:System.Net.Sockets.SocketError"/> instance.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssServer.SendUpgrade(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends a WebSocket upgrade response to the client.
            </summary>
            <param name="response">The HTTP response containing the WebSocket upgrade information.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.IWsSession">
            <summary>
            Represents the interface for a WebSocket session, providing methods for sending various WebSocket frames.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendText(System.Byte[])">
            <summary>
            Sends a text message synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendTextAsync(System.Byte[])">
            <summary>
            Sends a text message asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendTextAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendBinary(System.Byte[])">
            <summary>
            Sends a binary message synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendBinaryAsync(System.Byte[])">
            <summary>
            Sends a binary message asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendBinaryAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendClose(System.Int32,System.Byte[])">
            <summary>
            Sends a close frame synchronously to the WebSocket connection with the specified status code and buffer.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendClose(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a close frame synchronously to the WebSocket connection with the specified status code, buffer, position, and length.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendCloseAsync(System.Int32,System.Byte[])">
            <summary>
            Sends a close frame asynchronously to the WebSocket connection with the specified status code and buffer.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <returns>True if the close frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendCloseAsync(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a close frame asynchronously to the WebSocket connection with the specified status code, buffer, position, and length.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the close frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPing(System.Byte[])">
            <summary>
            Sends a ping frame synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping frame synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPingAsync(System.Byte[])">
            <summary>
            Sends a ping frame asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <returns>True if the ping frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPingAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping frame asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the ping frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPong(System.Byte[])">
            <summary>
            Sends a pong frame synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPong(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a pong frame synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPongAsync(System.Byte[])">
            <summary>
            Sends a pong frame asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <returns>True if the pong frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.IWsSession.SendPongAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a pong frame asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the pong frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.WsSession">
            <summary>
            Represents a WebSocket session that inherits from HttpSession and implements WebSocket functionality.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.#ctor(XmobiTea.ProtonNetServer.WsServer)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.WsSession"/> class with the specified WebSocket server.
            </summary>
            <param name="server">The WebSocket server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendText(System.Byte[])">
            <summary>
            Sends a text message synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendTextAsync(System.Byte[])">
            <summary>
            Sends a text message asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendTextAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendBinary(System.Byte[])">
            <summary>
            Sends a binary message synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendBinaryAsync(System.Byte[])">
            <summary>
            Sends a binary message asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendBinaryAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendClose(System.Int32,System.Byte[])">
            <summary>
            Sends a close frame synchronously to the WebSocket connection with the specified status code and buffer.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendClose(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a close frame synchronously to the WebSocket connection with the specified status code, buffer, position, and length.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendCloseAsync(System.Int32,System.Byte[])">
            <summary>
            Sends a close frame asynchronously to the WebSocket connection with the specified status code and buffer.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <returns>True if the close frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendCloseAsync(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a close frame asynchronously to the WebSocket connection with the specified status code, buffer, position, and length.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the close frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPing(System.Byte[])">
            <summary>
            Sends a ping frame synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping frame synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPingAsync(System.Byte[])">
            <summary>
            Sends a ping frame asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <returns>True if the ping frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPingAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping frame asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the ping frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPong(System.Byte[])">
            <summary>
            Sends a pong frame synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPong(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a pong frame synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPongAsync(System.Byte[])">
            <summary>
            Sends a pong frame asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <returns>True if the pong frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendPongAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a pong frame asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the pong frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnDisconnecting">
            <summary>
            Called when the session is disconnecting.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnDisconnected">
            <summary>
            Called when the session has been disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from the connection.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnReceivedRequestHeader(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the HTTP request headers are received.
            </summary>
            <param name="request">The HTTP request containing the headers.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnReceivedRequest(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the complete HTTP request is received.
            </summary>
            <param name="request">The received HTTP request.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnReceivedRequestError(XmobiTea.ProtonNetCommon.HttpRequest,System.String)">
            <summary>
            Called when an error occurs while receiving the HTTP request.
            </summary>
            <param name="request">The HTTP request that caused the error.</param>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is being established.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsConnected(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is successfully established.
            </summary>
            <param name="response">The HTTP response for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest,XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is being established.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
            <param name="response">The HTTP response for the WebSocket connection.</param>
            <returns>True if the connection is allowed; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsConnected(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is successfully established.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsDisconnecting">
            <summary>
            Called when a WebSocket connection is being disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsDisconnected">
            <summary>
            Called when a WebSocket connection is successfully disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from the WebSocket connection.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsClose(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket connection is closed.
            </summary>
            <param name="buffer">The close data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the close data.</param>
            <param name="status">The close status code.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket ping is received.
            </summary>
            <param name="buffer">The ping data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the ping data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsPong(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket pong is received.
            </summary>
            <param name="buffer">The pong data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the pong data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsError(System.String)">
            <summary>
            Called when a WebSocket error occurs with a custom error message.
            </summary>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.OnWsError(System.Net.Sockets.SocketError)">
            <summary>
            Called when a WebSocket error occurs with a <see cref="T:System.Net.Sockets.SocketError"/> instance.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WsSession.SendUpgrade(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends a WebSocket upgrade response to the client.
            </summary>
            <param name="response">The HTTP response containing the WebSocket upgrade information.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.WssSession">
            <summary>
            Represents a secure WebSocket session that inherits from HttpsSession and implements WebSocket functionality.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.#ctor(XmobiTea.ProtonNetServer.WssServer)">
            <summary>
            Initializes a new instance of the <see cref="T:XmobiTea.ProtonNetServer.WssSession"/> class with the specified WebSocket server.
            </summary>
            <param name="server">The WebSocket server.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendText(System.Byte[])">
            <summary>
            Sends a text message synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendTextAsync(System.Byte[])">
            <summary>
            Sends a text message asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendTextAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a text message asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the text message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendBinary(System.Byte[])">
            <summary>
            Sends a binary message synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendBinary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendBinaryAsync(System.Byte[])">
            <summary>
            Sends a binary message asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendBinaryAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a binary message asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the binary message.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the message was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendClose(System.Int32,System.Byte[])">
            <summary>
            Sends a close frame synchronously to the WebSocket connection with the specified status code and buffer.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendClose(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a close frame synchronously to the WebSocket connection with the specified status code, buffer, position, and length.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendCloseAsync(System.Int32,System.Byte[])">
            <summary>
            Sends a close frame asynchronously to the WebSocket connection with the specified status code and buffer.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <returns>True if the close frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendCloseAsync(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a close frame asynchronously to the WebSocket connection with the specified status code, buffer, position, and length.
            </summary>
            <param name="status">The close status code.</param>
            <param name="buffer">The buffer containing additional data to send with the close frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the close frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPing(System.Byte[])">
            <summary>
            Sends a ping frame synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping frame synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPingAsync(System.Byte[])">
            <summary>
            Sends a ping frame asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <returns>True if the ping frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPingAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a ping frame asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the ping frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the ping frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPong(System.Byte[])">
            <summary>
            Sends a pong frame synchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPong(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a pong frame synchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPongAsync(System.Byte[])">
            <summary>
            Sends a pong frame asynchronously to the WebSocket connection.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <returns>True if the pong frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendPongAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends a pong frame asynchronously to the WebSocket connection with a specified position and length.
            </summary>
            <param name="buffer">The buffer containing the pong frame.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the data to send.</param>
            <returns>True if the pong frame was sent successfully; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnDisconnecting">
            <summary>
            Called when the session is disconnecting.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnDisconnected">
            <summary>
            Called when the session has been disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from the connection.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnReceivedRequestHeader(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the HTTP request headers are received.
            </summary>
            <param name="request">The HTTP request containing the headers.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnReceivedRequest(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when the complete HTTP request is received.
            </summary>
            <param name="request">The received HTTP request.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnReceivedRequestError(XmobiTea.ProtonNetCommon.HttpRequest,System.String)">
            <summary>
            Called when an error occurs while receiving the HTTP request.
            </summary>
            <param name="request">The HTTP request that caused the error.</param>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is being established.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsConnected(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is successfully established.
            </summary>
            <param name="response">The HTTP response for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsConnecting(XmobiTea.ProtonNetCommon.HttpRequest,XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Called when a WebSocket connection is being established.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
            <param name="response">The HTTP response for the WebSocket connection.</param>
            <returns>True if the connection is allowed; otherwise, false.</returns>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsConnected(XmobiTea.ProtonNetCommon.HttpRequest)">
            <summary>
            Called when a WebSocket connection is successfully established.
            </summary>
            <param name="request">The HTTP request for the WebSocket connection.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsDisconnecting">
            <summary>
            Called when a WebSocket connection is being disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsDisconnected">
            <summary>
            Called when a WebSocket connection is successfully disconnected.
            </summary>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when data is received from the WebSocket connection.
            </summary>
            <param name="buffer">The received data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the received data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsClose(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket connection is closed.
            </summary>
            <param name="buffer">The close data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the close data.</param>
            <param name="status">The close status code.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsPing(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket ping is received.
            </summary>
            <param name="buffer">The ping data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the ping data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsPong(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Called when a WebSocket pong is received.
            </summary>
            <param name="buffer">The pong data buffer.</param>
            <param name="position">The starting position in the buffer.</param>
            <param name="length">The length of the pong data.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsError(System.String)">
            <summary>
            Called when a WebSocket error occurs with a custom error message.
            </summary>
            <param name="error">The error message.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.OnWsError(System.Net.Sockets.SocketError)">
            <summary>
            Called when a WebSocket error occurs with a <see cref="T:System.Net.Sockets.SocketError"/> instance.
            </summary>
            <param name="error">The <see cref="T:System.Net.Sockets.SocketError"/> that occurred.</param>
        </member>
        <member name="M:XmobiTea.ProtonNetServer.WssSession.SendUpgrade(XmobiTea.ProtonNetCommon.HttpResponse)">
            <summary>
            Sends a WebSocket upgrade response to the client.
            </summary>
            <param name="response">The HTTP response containing the WebSocket upgrade information.</param>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.Options.TcpServerOptions">
            <summary>
            Represents the configuration options for the TCP server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.AcceptorBacklog">
            <summary>
            Gets or sets the maximum length of the pending connections queue.
            </summary>
            <value>The default value is 1024.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.DualMode">
            <summary>
            Gets or sets a value indicating whether to use dual-mode sockets.
            </summary>
            <value>True if dual-mode sockets are used; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.KeepAlive">
            <summary>
            Gets or sets a value indicating whether to use keep-alive packets.
            </summary>
            <value>True if keep-alive packets are enabled; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.TcpKeepAliveTime">
            <summary>
            Gets or sets the time, in seconds, between keep-alive packets.
            Only available in .NET Core.
            </summary>
            <value>The default value is -1, which means keep-alive packets are disabled.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.TcpKeepAliveInterval">
            <summary>
            Gets or sets the interval, in seconds, between keep-alive packet retries.
            Only available in .NET Core.
            </summary>
            <value>The default value is -1, which means keep-alive packets are disabled.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.TcpKeepAliveRetryCount">
            <summary>
            Gets or sets the maximum number of keep-alive packet retries.
            Only available in .NET Core.
            </summary>
            <value>The default value is -1, which means keep-alive packets are disabled.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.NoDelay">
            <summary>
            Gets or sets a value indicating whether to use the no-delay option.
            </summary>
            <value>True if no-delay option is used; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.ReuseAddress">
            <summary>
            Gets or sets a value indicating whether to allow address reuse.
            </summary>
            <value>True if address reuse is allowed; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.ExclusiveAddressUse">
            <summary>
            Gets or sets a value indicating whether to use exclusive address binding.
            </summary>
            <value>True if exclusive address binding is used; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.ReceiveBufferLimit">
            <summary>
            Gets or sets the maximum number of bytes that can be received in the buffer.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.ReceiveBufferCapacity">
            <summary>
            Gets or sets the capacity of the receive buffer.
            </summary>
            <value>The default value is 8192 bytes.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.SendBufferLimit">
            <summary>
            Gets or sets the maximum number of bytes that can be sent in the buffer.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.TcpServerOptions.SendBufferCapacity">
            <summary>
            Gets or sets the capacity of the send buffer.
            </summary>
            <value>The default value is 8192 bytes.</value>
        </member>
        <member name="T:XmobiTea.ProtonNetServer.Options.UdpServerOptions">
            <summary>
            Represents the configuration options for the UDP server.
            </summary>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.UdpServerOptions.DualMode">
            <summary>
            Gets or sets a value indicating whether to use dual-mode sockets.
            </summary>
            <value>True if dual-mode sockets are used; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.UdpServerOptions.ReuseAddress">
            <summary>
            Gets or sets a value indicating whether to allow address reuse.
            </summary>
            <value>True if address reuse is allowed; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.UdpServerOptions.ExclusiveAddressUse">
            <summary>
            Gets or sets a value indicating whether to use exclusive address binding.
            </summary>
            <value>True if exclusive address binding is used; otherwise, false.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.UdpServerOptions.ReceiveBufferLimit">
            <summary>
            Gets or sets the maximum number of bytes that can be received in the buffer.
            </summary>
            <value>The default value is 0, which means no limit is applied.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.UdpServerOptions.ReceiveBufferCapacity">
            <summary>
            Gets or sets the capacity of the receive buffer.
            </summary>
            <value>The default value is 8192 bytes.</value>
        </member>
        <member name="P:XmobiTea.ProtonNetServer.Options.UdpServerOptions.SendBufferLimit">
            <summary>
            Gets or sets the maximum number of bytes that can be sent in the buffer.
            </summary>
            <value>The default value is 0, which means no limit is applied.</value>
        </member>
    </members>
</doc>
